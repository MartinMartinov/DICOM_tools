#include "DICOM.h"

database::database() {
    Reference *x;

    validVR << "AE" << "AS" << "AT" << "CS" << "DA" << "DS" << "DT" << "FL"
            << "FD" << "IS" << "LO" << "LT" << "OB" << "OF" << "OW" << "PN"
            << "SH" << "SL" << "SQ" << "SS" << "ST" << "TM" << "UI" << "UL"
            << "UN" << "US" << "UT";
    implicitVR << "OB" << "OW" << "OF" << "SQ" << "UT" << "UN";

    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0000;
    x->title="File Meta Information Group Length";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0001;
    x->title="File Meta Information Version";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0002;
    x->title="Media Storage SOP Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0003;
    x->title="Media Storage SOP Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0010;
    x->title="Transfer Syntax UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0012;
    x->title="Implementation Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0013;
    x->title="Implementation Version Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0016;
    x->title="Source Application Entity Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0017;
    x->title="Sending Application Entity Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0018;
    x->title="Receiving Application Entity Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0100;
    x->title="Private Information Creator UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0002;
    x->tag[1]=0x0102;
    x->title="Private Information";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1130;
    x->title="File-set ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1141;
    x->title="File-set Descriptor File ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1142;
    x->title="Specific Character Set of File-set Descriptor File";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1200;
    x->title="Offset of the First Directory Record of the Root Directory Entity";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1202;
    x->title="Offset of the Last Directory Record of the Root Directory Entity";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1212;
    x->title="File-set Consistency Flag";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1220;
    x->title="Directory Record Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1400;
    x->title="Offset of the Next Directory Record";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1410;
    x->title="Record In-use Flag";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1420;
    x->title="Offset of Referenced Lower-Level Directory Entity";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1430;
    x->title="Directory Record Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1432;
    x->title="Private Record UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1500;
    x->title="Referenced File ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1504;
    x->title="MRDR Directory Record Offset";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1510;
    x->title="Referenced SOP Class UID in File";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1511;
    x->title="Referenced SOP Instance UID in File";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1512;
    x->title="Referenced Transfer Syntax UID in File";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x151A;
    x->title="Referenced Related General SOP Class UID in File";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0004;
    x->tag[1]=0x1600;
    x->title="Number of References";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0001;
    x->title="Length to End";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0005;
    x->title="Specific Character Set";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0006;
    x->title="Language Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0008;
    x->title="Image Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0010;
    x->title="Recognition Code";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0012;
    x->title="Instance Creation Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0013;
    x->title="Instance Creation Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0014;
    x->title="Instance Creator UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0015;
    x->title="Instance Coercion DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0016;
    x->title="SOP Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0018;
    x->title="SOP Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x001A;
    x->title="Related General SOP Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x001B;
    x->title="Original Specialized SOP Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0020;
    x->title="Study Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0021;
    x->title="Series Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0022;
    x->title="Acquisition Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0023;
    x->title="Content Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0024;
    x->title="Overlay Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0025;
    x->title="Curve Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x002A;
    x->title="Acquisition DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0030;
    x->title="Study Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0031;
    x->title="Series Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0032;
    x->title="Acquisition Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0033;
    x->title="Content Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0034;
    x->title="Overlay Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0035;
    x->title="Curve Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0040;
    x->title="Data Set Type";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0041;
    x->title="Data Set Subtype";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0042;
    x->title="Nuclear Medicine Series Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0050;
    x->title="Accession Number";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0051;
    x->title="Issuer of Accession Number Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0052;
    x->title="Query/Retrieve Level";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0053;
    x->title="Query/Retrieve View";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0054;
    x->title="Retrieve AE Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0055;
    x->title="Station AE Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0056;
    x->title="Instance Availability";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0058;
    x->title="Failed SOP Instance UID List";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0060;
    x->title="Modality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0061;
    x->title="Modalities in Study";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0062;
    x->title="SOP Classes in Study";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0064;
    x->title="Conversion Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0068;
    x->title="Presentation Intent Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0070;
    x->title="Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0080;
    x->title="Institution Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0081;
    x->title="Institution Address";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0082;
    x->title="Institution Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0090;
    x->title="Referring Physician's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0092;
    x->title="Referring Physician's Address";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0094;
    x->title="Referring Physician's Telephone Numbers";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0096;
    x->title="Referring Physician Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x009C;
    x->title="Consulting Physician's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x009D;
    x->title="Consulting Physician Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0100;
    x->title="Code Value";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0101;
    x->title="Extended Code Value";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0102;
    x->title="Coding Scheme Designator";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0103;
    x->title="Coding Scheme Version";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0104;
    x->title="Code Meaning";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0105;
    x->title="Mapping Resource";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0106;
    x->title="Context Group Version";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0107;
    x->title="Context Group Local Version";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0108;
    x->title="Extended Code Meaning";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x010B;
    x->title="Context Group Extension Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x010C;
    x->title="Coding Scheme UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x010D;
    x->title="Context Group Extension Creator UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x010F;
    x->title="Context Identifier";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0110;
    x->title="Coding Scheme Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0112;
    x->title="Coding Scheme Registry";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0114;
    x->title="Coding Scheme External ID";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0115;
    x->title="Coding Scheme Name";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0116;
    x->title="Coding Scheme Responsible Organization";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0117;
    x->title="Context UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0118;
    x->title="Mapping Resource UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0119;
    x->title="Long Code Value";
    x->vr="UC";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0120;
    x->title="URN Code Value";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0121;
    x->title="Equivalent Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0122;
    x->title="Mapping Resource Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0123;
    x->title="Context Group Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0124;
    x->title="Mapping Resource Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0201;
    x->title="Timezone Offset From UTC";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0300;
    x->title="Private Data Element Characteristics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0301;
    x->title="Private Group Reference";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0302;
    x->title="Private Creator Reference";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0303;
    x->title="Block Identifying Information Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0304;
    x->title="Nonidentifying Private Elements";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0306;
    x->title="Identifying Private Elements";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0305;
    x->title="Deidentification Action Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x0307;
    x->title="Deidentification Action";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1000;
    x->title="Network ID";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1010;
    x->title="Station Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1030;
    x->title="Study Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1032;
    x->title="Procedure Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x103E;
    x->title="Series Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x103F;
    x->title="Series Description Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1040;
    x->title="Institutional Department Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1048;
    x->title="Physician(s) of Record";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1049;
    x->title="Physician(s) of Record Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1050;
    x->title="Performing Physician's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1052;
    x->title="Performing Physician Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1060;
    x->title="Name of Physician(s) Reading Study";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1062;
    x->title="Physician(s) Reading Study Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1070;
    x->title="Operators' Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1072;
    x->title="Operator Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1080;
    x->title="Admitting Diagnoses Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1084;
    x->title="Admitting Diagnoses Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1090;
    x->title="Manufacturer's Model Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1100;
    x->title="Referenced Results Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1110;
    x->title="Referenced Study Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1111;
    x->title="Referenced Performed Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1115;
    x->title="Referenced Series Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1120;
    x->title="Referenced Patient Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1125;
    x->title="Referenced Visit Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1130;
    x->title="Referenced Overlay Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1134;
    x->title="Referenced Stereometric Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x113A;
    x->title="Referenced Waveform Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1140;
    x->title="Referenced Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1145;
    x->title="Referenced Curve Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x114A;
    x->title="Referenced Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x114B;
    x->title="Referenced Real World Value Mapping Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1150;
    x->title="Referenced SOP Class UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1155;
    x->title="Referenced SOP Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x115A;
    x->title="SOP Classes Supported";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1160;
    x->title="Referenced Frame Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1161;
    x->title="Simple Frame List";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1162;
    x->title="Calculated Frame List";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1163;
    x->title="Time Range";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1164;
    x->title="Frame Extraction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1167;
    x->title="Multi-frame Source SOP Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1190;
    x->title="Retrieve URL";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1195;
    x->title="Transaction UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1196;
    x->title="Warning Reason";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1197;
    x->title="Failure Reason";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1198;
    x->title="Failed SOP Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1199;
    x->title="Referenced SOP Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x119A;
    x->title="Other Failures Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1200;
    x->title="Studies Containing Other Referenced Instances Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x1250;
    x->title="Related Series Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2110;
    x->title="Lossy Image Compression (Retired)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2111;
    x->title="Derivation Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2112;
    x->title="Source Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2120;
    x->title="Stage Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2122;
    x->title="Stage Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2124;
    x->title="Number of Stages";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2127;
    x->title="View Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2128;
    x->title="View Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2129;
    x->title="Number of Event Timers";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x212A;
    x->title="Number of Views in Stage";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2130;
    x->title="Event Elapsed Time(s)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2132;
    x->title="Event Timer Name(s)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2133;
    x->title="Event Timer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2134;
    x->title="Event Time Offset";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2135;
    x->title="Event Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2142;
    x->title="Start Trim";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2143;
    x->title="Stop Trim";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2144;
    x->title="Recommended Display Frame Rate";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2200;
    x->title="Transducer Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2204;
    x->title="Transducer Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2208;
    x->title="Anatomic Structure";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2218;
    x->title="Anatomic Region Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2220;
    x->title="Anatomic Region Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2228;
    x->title="Primary Anatomic Structure Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2229;
    x->title="Anatomic Structure, Space or Region Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2230;
    x->title="Primary Anatomic Structure Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2240;
    x->title="Transducer Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2242;
    x->title="Transducer Position Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2244;
    x->title="Transducer Orientation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2246;
    x->title="Transducer Orientation Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2251;
    x->title="Anatomic Structure Space Or Region Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2253;
    x->title="Anatomic Portal Of Entrance Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2255;
    x->title="Anatomic Approach Direction Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2256;
    x->title="Anatomic Perspective Description (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2257;
    x->title="Anatomic Perspective Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2258;
    x->title="Anatomic Location Of Examining Instrument Description (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x2259;
    x->title="Anatomic Location Of Examining Instrument Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x225A;
    x->title="Anatomic Structure Space Or Region Modifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x225C;
    x->title="On Axis Background Anatomic Structure Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x3001;
    x->title="Alternate Representation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x3010;
    x->title="Irradiation Event UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x3011;
    x->title="Source Irradiation Event Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x3012;
    x->title="Radiopharmaceutical Administration Event UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x4000;
    x->title="Identifying Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9007;
    x->title="Frame Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9092;
    x->title="Referenced Image Evidence Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9121;
    x->title="Referenced Raw Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9123;
    x->title="Creator-Version UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9124;
    x->title="Derivation Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9154;
    x->title="Source Image Evidence Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9205;
    x->title="Pixel Presentation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9206;
    x->title="Volumetric Properties";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9207;
    x->title="Volume Based Calculation Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9208;
    x->title="Complex Image Component";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9209;
    x->title="Acquisition Contrast";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9215;
    x->title="Derivation Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9237;
    x->title="Referenced Presentation State Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9410;
    x->title="Referenced Other Plane Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9458;
    x->title="Frame Display Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9459;
    x->title="Recommended Display Frame Rate in Float";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0008;
    x->tag[1]=0x9460;
    x->title="Skip Frame Range Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0010;
    x->title="Patient's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0020;
    x->title="Patient ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0021;
    x->title="Issuer of Patient ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0022;
    x->title="Type of Patient ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0024;
    x->title="Issuer of Patient ID Qualifiers Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0026;
    x->title="Source Patient Group Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0027;
    x->title="Group of Patients Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0028;
    x->title="Subject Relative Position in Image";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0030;
    x->title="Patient's Birth Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0032;
    x->title="Patient's Birth Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0033;
    x->title="Patient's Birth Date in Alternative Calendar";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0034;
    x->title="Patient's Death Date in Alternative Calendar";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0035;
    x->title="Patient's Alternative Calendar";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0040;
    x->title="Patient's Sex";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0050;
    x->title="Patient's Insurance Plan Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0101;
    x->title="Patient's Primary Language Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0102;
    x->title="Patient's Primary Language Modifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0200;
    x->title="Quality Control Subject";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0201;
    x->title="Quality Control Subject Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0212;
    x->title="Strain Description";
    x->vr="UC";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0213;
    x->title="Strain Nomenclature";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0214;
    x->title="Strain Stock Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0215;
    x->title="Strain Source Registry Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0216;
    x->title="Strain Stock Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0217;
    x->title="Strain Source";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0218;
    x->title="Strain Additional Information";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x0219;
    x->title="Strain Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1000;
    x->title="Other Patient IDs";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1001;
    x->title="Other Patient Names";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1002;
    x->title="Other Patient IDs Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1005;
    x->title="Patient's Birth Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1010;
    x->title="Patient's Age";
    x->vr="AS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1020;
    x->title="Patient's Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1021;
    x->title="Patient's Size Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1030;
    x->title="Patient's Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1040;
    x->title="Patient's Address";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1050;
    x->title="Insurance Plan Identification";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1060;
    x->title="Patient's Mother's Birth Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1080;
    x->title="Military Rank";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1081;
    x->title="Branch of Service";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1090;
    x->title="Medical Record Locator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x1100;
    x->title="Referenced Patient Photo Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2000;
    x->title="Medical Alerts";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2110;
    x->title="Allergies";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2150;
    x->title="Country of Residence";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2152;
    x->title="Region of Residence";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2154;
    x->title="Patient's Telephone Numbers";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2155;
    x->title="Patient's Telecom Information";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2160;
    x->title="Ethnic Group";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2180;
    x->title="Occupation";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x21A0;
    x->title="Smoking Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x21B0;
    x->title="Additional Patient History";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x21C0;
    x->title="Pregnancy Status";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x21D0;
    x->title="Last Menstrual Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x21F0;
    x->title="Patient's Religious Preference";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2201;
    x->title="Patient Species Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2202;
    x->title="Patient Species Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2203;
    x->title="Patient's Sex Neutered";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2210;
    x->title="Anatomical Orientation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2292;
    x->title="Patient Breed Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2293;
    x->title="Patient Breed Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2294;
    x->title="Breed Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2295;
    x->title="Breed Registration Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2296;
    x->title="Breed Registry Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2297;
    x->title="Responsible Person";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2298;
    x->title="Responsible Person Role";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x2299;
    x->title="Responsible Organization";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x4000;
    x->title="Patient Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0010;
    x->tag[1]=0x9431;
    x->title="Examined Body Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0010;
    x->title="Clinical Trial Sponsor Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0020;
    x->title="Clinical Trial Protocol ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0021;
    x->title="Clinical Trial Protocol Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0030;
    x->title="Clinical Trial Site ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0031;
    x->title="Clinical Trial Site Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0040;
    x->title="Clinical Trial Subject ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0042;
    x->title="Clinical Trial Subject Reading ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0050;
    x->title="Clinical Trial Time Point ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0051;
    x->title="Clinical Trial Time Point Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0060;
    x->title="Clinical Trial Coordinating Center Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0062;
    x->title="Patient Identity Removed";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0063;
    x->title="De-identification Method";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0064;
    x->title="De-identification Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0071;
    x->title="Clinical Trial Series ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0072;
    x->title="Clinical Trial Series Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0081;
    x->title="Clinical Trial Protocol Ethics Committee Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0082;
    x->title="Clinical Trial Protocol Ethics Committee Approval Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0083;
    x->title="Consent for Clinical Trial Use Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0084;
    x->title="Distribution Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0012;
    x->tag[1]=0x0085;
    x->title="Consent for Distribution Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0023;
    x->title="CAD File Format";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0024;
    x->title="Component Reference System";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0025;
    x->title="Component Manufacturing Procedure";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0028;
    x->title="Component Manufacturer";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0030;
    x->title="Material Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0032;
    x->title="Material Pipe Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0034;
    x->title="Material Isolation Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0042;
    x->title="Material Grade";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0044;
    x->title="Material Properties Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0045;
    x->title="Material Properties File Format (Retired)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0046;
    x->title="Material Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0050;
    x->title="Component Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0052;
    x->title="Curvature Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0054;
    x->title="Outer Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0056;
    x->title="Inner Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0100;
    x->title="Component Welder IDs";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0101;
    x->title="Secondary Approval Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0102;
    x->title="Secondary Review Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0103;
    x->title="Secondary Review Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0104;
    x->title="Secondary Reviewer Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0105;
    x->title="Repair ID";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0106;
    x->title="Multiple Component Approval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0107;
    x->title="Other Approval Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x0108;
    x->title="Other Secondary Approval Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x1010;
    x->title="Actual Environmental Conditions";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x1020;
    x->title="Expiry Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x1040;
    x->title="Environmental Conditions";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2002;
    x->title="Evaluator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2004;
    x->title="Evaluator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2006;
    x->title="Evaluator Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2008;
    x->title="Evaluation Attempt";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2012;
    x->title="Indication Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2014;
    x->title="Indication Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2016;
    x->title="Indication Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2018;
    x->title="Indication Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x201A;
    x->title="Indication Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x201C;
    x->title="Indication Disposition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x201E;
    x->title="Indication ROI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2030;
    x->title="Indication Physical Property Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2032;
    x->title="Property Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2202;
    x->title="Coordinate System Number of Axes";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2204;
    x->title="Coordinate System Axes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2206;
    x->title="Coordinate System Axis Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2208;
    x->title="Coordinate System Data Set Mapping";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x220A;
    x->title="Coordinate System Axis Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x220C;
    x->title="Coordinate System Axis Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x220E;
    x->title="Coordinate System Axis Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2210;
    x->title="Coordinate System Axis Values";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2220;
    x->title="Coordinate System Transform Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2222;
    x->title="Transform Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2224;
    x->title="Transform Number of Axes";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2226;
    x->title="Transform Order of Axes";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x2228;
    x->title="Transformed Axis Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x222A;
    x->title="Coordinate System Transform Rotation and Scale Matrix";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x222C;
    x->title="Coordinate System Transform Translation Matrix";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3011;
    x->title="Internal Detector Frame Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3012;
    x->title="Number of Frames Integrated";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3020;
    x->title="Detector Temperature Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3022;
    x->title="Sensor Name";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3024;
    x->title="Horizontal Offset of Sensor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3026;
    x->title="Vertical Offset of Sensor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3028;
    x->title="Sensor Temperature";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3040;
    x->title="Dark Current Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3050;
    x->title="Dark Current Counts";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3060;
    x->title="Gain Correction Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3070;
    x->title="Air Counts";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3071;
    x->title="KV Used in Gain Calibration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3072;
    x->title="MA Used in Gain Calibration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3073;
    x->title="Number of Frames Used for Integration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3074;
    x->title="Filter Material Used in Gain Calibration";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3075;
    x->title="Filter Thickness Used in Gain Calibration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3076;
    x->title="Date of Gain Calibration";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3077;
    x->title="Time of Gain Calibration";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3080;
    x->title="Bad Pixel Image";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x3099;
    x->title="Calibration Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4002;
    x->title="Pulser Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4004;
    x->title="Pulser Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4006;
    x->title="Pulser Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4008;
    x->title="Receiver Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x400A;
    x->title="Amplifier Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x400C;
    x->title="Receiver Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x400E;
    x->title="Pre-Amplifier Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x400F;
    x->title="Pre-Amplifier Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4010;
    x->title="Transmit Transducer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4011;
    x->title="Receive Transducer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4012;
    x->title="Number of Elements";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4013;
    x->title="Element Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4014;
    x->title="Element Dimension A";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4015;
    x->title="Element Dimension B";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4016;
    x->title="Element Pitch A";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4017;
    x->title="Measured Beam Dimension A";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4018;
    x->title="Measured Beam Dimension B";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4019;
    x->title="Location of Measured Beam Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x401A;
    x->title="Nominal Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x401B;
    x->title="Measured Center Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x401C;
    x->title="Measured Bandwidth";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x401D;
    x->title="Element Pitch B";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4020;
    x->title="Pulser Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4022;
    x->title="Pulse Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4024;
    x->title="Excitation Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4026;
    x->title="Modulation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4028;
    x->title="Damping";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4030;
    x->title="Receiver Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4031;
    x->title="Acquired Soundpath Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4032;
    x->title="Acquisition Compression Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4033;
    x->title="Acquisition Sample Size";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4034;
    x->title="Rectifier Smoothing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4035;
    x->title="DAC Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4036;
    x->title="DAC Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4038;
    x->title="DAC Gain Points";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x403A;
    x->title="DAC Time Points";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x403C;
    x->title="DAC Amplitude";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4040;
    x->title="Pre-Amplifier Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4050;
    x->title="Transmit Transducer Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4051;
    x->title="Receive Transducer Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4052;
    x->title="Incident Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4054;
    x->title="Coupling Technique";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4056;
    x->title="Coupling Medium";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4057;
    x->title="Coupling Velocity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4058;
    x->title="Probe Center Location X";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4059;
    x->title="Probe Center Location Z";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x405A;
    x->title="Sound Path Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x405C;
    x->title="Delay Law Identifier";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4060;
    x->title="Gate Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4062;
    x->title="Gate Threshold";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4064;
    x->title="Velocity of Sound";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4070;
    x->title="Calibration Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4072;
    x->title="Calibration Procedure";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4074;
    x->title="Procedure Version";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4076;
    x->title="Procedure Creation Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4078;
    x->title="Procedure Expiration Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x407A;
    x->title="Procedure Last Modified Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x407C;
    x->title="Calibration Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x407E;
    x->title="Calibration Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4080;
    x->title="Probe Drive Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4081;
    x->title="Drive Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4082;
    x->title="Probe Drive Notes";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4083;
    x->title="Drive Probe Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4084;
    x->title="Probe Inductance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4085;
    x->title="Probe Resistance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4086;
    x->title="Receive Probe Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4087;
    x->title="Probe Drive Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4088;
    x->title="Bridge Resistors";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4089;
    x->title="Probe Orientation Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x408B;
    x->title="User Selected Gain Y";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x408C;
    x->title="User Selected Phase";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x408D;
    x->title="User Selected Offset X";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x408E;
    x->title="User Selected Offset Y";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4091;
    x->title="Channel Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x4092;
    x->title="Channel Threshold";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x409A;
    x->title="Scanner Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x409B;
    x->title="Scan Procedure";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x409C;
    x->title="Translation Rate X";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x409D;
    x->title="Translation Rate Y";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x409F;
    x->title="Channel Overlap";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x40A0;
    x->title="Image Quality Indicator Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x40A1;
    x->title="Image Quality Indicator Material";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x40A2;
    x->title="Image Quality Indicator Size";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5002;
    x->title="LINAC Energy";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5004;
    x->title="LINAC Output";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5100;
    x->title="Active Aperture";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5101;
    x->title="Total Aperture";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5102;
    x->title="Aperture Elevation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5103;
    x->title="Main Lobe Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5104;
    x->title="Main Roof Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5105;
    x->title="Connector Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5106;
    x->title="Wedge Model Number";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5107;
    x->title="Wedge Angle Float";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5108;
    x->title="Wedge Roof Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5109;
    x->title="Wedge Element 1 Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510A;
    x->title="Wedge Material Velocity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510B;
    x->title="Wedge Material";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510C;
    x->title="Wedge Offset Z";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510D;
    x->title="Wedge Origin Offset X";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510E;
    x->title="Wedge Time Delay";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x510F;
    x->title="Wedge Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5110;
    x->title="Wedge Manufacturer Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5111;
    x->title="Wedge Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5112;
    x->title="Nominal Beam Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5113;
    x->title="Wedge Offset X";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5114;
    x->title="Wedge Offset Y";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5115;
    x->title="Wedge Total Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5116;
    x->title="Wedge In Contact Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5117;
    x->title="Wedge Front Gap";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5118;
    x->title="Wedge Total Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x5119;
    x->title="Wedge Front Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511A;
    x->title="Wedge Rear Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511B;
    x->title="Wedge Total Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511C;
    x->title="Wedge In Contact Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511D;
    x->title="Wedge Chamfer Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511E;
    x->title="Wedge Curve";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0014;
    x->tag[1]=0x511F;
    x->title="Radius Along the Wedge";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0010;
    x->title="Contrast/Bolus Agent";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0012;
    x->title="Contrast/Bolus Agent Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0013;
    x->title="Contrast/Bolus T1 Relaxivity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0014;
    x->title="Contrast/Bolus Administration Route Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0015;
    x->title="Body Part Examined";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0020;
    x->title="Scanning Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0021;
    x->title="Sequence Variant";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0022;
    x->title="Scan Options";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0023;
    x->title="MR Acquisition Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0024;
    x->title="Sequence Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0025;
    x->title="Angio Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0026;
    x->title="Intervention Drug Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0027;
    x->title="Intervention Drug Stop Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0028;
    x->title="Intervention Drug Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0029;
    x->title="Intervention Drug Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x002A;
    x->title="Additional Drug Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0030;
    x->title="Radionuclide";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0031;
    x->title="Radiopharmaceutical";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0032;
    x->title="Energy Window Centerline";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0033;
    x->title="Energy Window Total Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0034;
    x->title="Intervention Drug Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0035;
    x->title="Intervention Drug Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0036;
    x->title="Intervention Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0037;
    x->title="Therapy Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0038;
    x->title="Intervention Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0039;
    x->title="Therapy Description";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x003A;
    x->title="Intervention Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0040;
    x->title="Cine Rate";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0042;
    x->title="Initial Cine Run State";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0050;
    x->title="Slice Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0060;
    x->title="KVP";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0061;
    x->title="";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0070;
    x->title="Counts Accumulated";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0071;
    x->title="Acquisition Termination Condition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0072;
    x->title="Effective Duration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0073;
    x->title="Acquisition Start Condition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0074;
    x->title="Acquisition Start Condition Data";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0075;
    x->title="Acquisition Termination Condition Data";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0080;
    x->title="Repetition Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0081;
    x->title="Echo Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0082;
    x->title="Inversion Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0083;
    x->title="Number of Averages";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0084;
    x->title="Imaging Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0085;
    x->title="Imaged Nucleus";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0086;
    x->title="Echo Number(s)";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0087;
    x->title="Magnetic Field Strength";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0088;
    x->title="Spacing Between Slices";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0089;
    x->title="Number of Phase Encoding Steps";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0090;
    x->title="Data Collection Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0091;
    x->title="Echo Train Length";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0093;
    x->title="Percent Sampling";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0094;
    x->title="Percent Phase Field of View";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x0095;
    x->title="Pixel Bandwidth";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1000;
    x->title="Device Serial Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1002;
    x->title="Device UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1003;
    x->title="Device ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1004;
    x->title="Plate ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1005;
    x->title="Generator ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1006;
    x->title="Grid ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1007;
    x->title="Cassette ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1008;
    x->title="Gantry ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1010;
    x->title="Secondary Capture Device ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1011;
    x->title="Hardcopy Creation Device ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1012;
    x->title="Date of Secondary Capture";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1014;
    x->title="Time of Secondary Capture";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1016;
    x->title="Secondary Capture Device Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1017;
    x->title="Hardcopy Device Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1018;
    x->title="Secondary Capture Device Manufacturer's Model Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1019;
    x->title="Secondary Capture Device Software Versions";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x101A;
    x->title="Hardcopy Device Software Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x101B;
    x->title="Hardcopy Device Manufacturer's Model Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1020;
    x->title="Software Version(s)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1022;
    x->title="Video Image Format Acquired";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1023;
    x->title="Digital Image Format Acquired";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1030;
    x->title="Protocol Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1040;
    x->title="Contrast/Bolus Route";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1041;
    x->title="Contrast/Bolus Volume";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1042;
    x->title="Contrast/Bolus Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1043;
    x->title="Contrast/Bolus Stop Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1044;
    x->title="Contrast/Bolus Total Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1045;
    x->title="Syringe Counts";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1046;
    x->title="Contrast Flow Rate";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1047;
    x->title="Contrast Flow Duration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1048;
    x->title="Contrast/Bolus Ingredient";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1049;
    x->title="Contrast/Bolus Ingredient Concentration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1050;
    x->title="Spatial Resolution";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1060;
    x->title="Trigger Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1061;
    x->title="Trigger Source or Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1062;
    x->title="Nominal Interval";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1063;
    x->title="Frame Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1064;
    x->title="Cardiac Framing Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1065;
    x->title="Frame Time Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1066;
    x->title="Frame Delay";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1067;
    x->title="Image Trigger Delay";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1068;
    x->title="Multiplex Group Time Offset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1069;
    x->title="Trigger Time Offset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x106A;
    x->title="Synchronization Trigger";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x106C;
    x->title="Synchronization Channel";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x106E;
    x->title="Trigger Sample Position";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1070;
    x->title="Radiopharmaceutical Route";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1071;
    x->title="Radiopharmaceutical Volume";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1072;
    x->title="Radiopharmaceutical Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1073;
    x->title="Radiopharmaceutical Stop Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1074;
    x->title="Radionuclide Total Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1075;
    x->title="Radionuclide Half Life";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1076;
    x->title="Radionuclide Positron Fraction";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1077;
    x->title="Radiopharmaceutical Specific Activity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1078;
    x->title="Radiopharmaceutical Start DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1079;
    x->title="Radiopharmaceutical Stop DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1080;
    x->title="Beat Rejection Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1081;
    x->title="Low R-R Value";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1082;
    x->title="High R-R Value";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1083;
    x->title="Intervals Acquired";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1084;
    x->title="Intervals Rejected";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1085;
    x->title="PVC Rejection";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1086;
    x->title="Skip Beats";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1088;
    x->title="Heart Rate";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1090;
    x->title="Cardiac Number of Images";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1094;
    x->title="Trigger Window";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1100;
    x->title="Reconstruction Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1110;
    x->title="Distance Source to Detector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1111;
    x->title="Distance Source to Patient";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1114;
    x->title="Estimated Radiographic Magnification Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1120;
    x->title="Gantry/Detector Tilt";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1121;
    x->title="Gantry/Detector Slew";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1130;
    x->title="Table Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1131;
    x->title="Table Traverse";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1134;
    x->title="Table Motion";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1135;
    x->title="Table Vertical Increment";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1136;
    x->title="Table Lateral Increment";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1137;
    x->title="Table Longitudinal Increment";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1138;
    x->title="Table Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x113A;
    x->title="Table Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1140;
    x->title="Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1141;
    x->title="Angular Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1142;
    x->title="Radial Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1143;
    x->title="Scan Arc";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1144;
    x->title="Angular Step";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1145;
    x->title="Center of Rotation Offset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1146;
    x->title="Rotation Offset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1147;
    x->title="Field of View Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1149;
    x->title="Field of View Dimension(s)";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1150;
    x->title="Exposure Time";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1151;
    x->title="X-Ray Tube Current";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1152;
    x->title="Exposure";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1153;
    x->title="Exposure in µAs";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1154;
    x->title="Average Pulse Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1155;
    x->title="Radiation Setting";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1156;
    x->title="Rectification Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x115A;
    x->title="Radiation Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x115E;
    x->title="Image and Fluoroscopy Area Dose Product";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1160;
    x->title="Filter Type";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1161;
    x->title="Type of Filters";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1162;
    x->title="Intensifier Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1164;
    x->title="Imager Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1166;
    x->title="Grid";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1170;
    x->title="Generator Power";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1180;
    x->title="Collimator/grid Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1181;
    x->title="Collimator Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1182;
    x->title="Focal Distance";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1183;
    x->title="X Focus Center";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1184;
    x->title="Y Focus Center";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1190;
    x->title="Focal Spot(s)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1191;
    x->title="Anode Target Material";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x11A0;
    x->title="Body Part Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x11A2;
    x->title="Compression Force";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x11A4;
    x->title="Paddle Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1200;
    x->title="Date of Last Calibration";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1201;
    x->title="Time of Last Calibration";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1202;
    x->title="DateTime of Last Calibration";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1210;
    x->title="Convolution Kernel";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1240;
    x->title="Upper/Lower Pixel Values";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1242;
    x->title="Actual Frame Duration";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1243;
    x->title="Count Rate";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1244;
    x->title="Preferred Playback Sequencing";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1250;
    x->title="Receive Coil Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1251;
    x->title="Transmit Coil Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1260;
    x->title="Plate Type";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1261;
    x->title="Phosphor Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1271;
    x->title="Water Equivalent Diameter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1272;
    x->title="Water Equivalent Diameter Calculation Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1300;
    x->title="Scan Velocity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1301;
    x->title="Whole Body Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1302;
    x->title="Scan Length";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1310;
    x->title="Acquisition Matrix";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1312;
    x->title="In-plane Phase Encoding Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1314;
    x->title="Flip Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1315;
    x->title="Variable Flip Angle Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1316;
    x->title="SAR";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1318;
    x->title="dB/dt";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1320;
    x->title="B1rms";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1400;
    x->title="Acquisition Device Processing Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1401;
    x->title="Acquisition Device Processing Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1402;
    x->title="Cassette Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1403;
    x->title="Cassette Size";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1404;
    x->title="Exposures on Plate";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1405;
    x->title="Relative X-Ray Exposure";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1411;
    x->title="Exposure Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1412;
    x->title="Target Exposure Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1413;
    x->title="Deviation Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1450;
    x->title="Column Angulation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1460;
    x->title="Tomo Layer Height";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1470;
    x->title="Tomo Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1480;
    x->title="Tomo Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1490;
    x->title="Tomo Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1491;
    x->title="Tomo Class";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1495;
    x->title="Number of Tomosynthesis Source Images";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1500;
    x->title="Positioner Motion";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1508;
    x->title="Positioner Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1510;
    x->title="Positioner Primary Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1511;
    x->title="Positioner Secondary Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1520;
    x->title="Positioner Primary Angle Increment";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1521;
    x->title="Positioner Secondary Angle Increment";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1530;
    x->title="Detector Primary Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1531;
    x->title="Detector Secondary Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1600;
    x->title="Shutter Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1602;
    x->title="Shutter Left Vertical Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1604;
    x->title="Shutter Right Vertical Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1606;
    x->title="Shutter Upper Horizontal Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1608;
    x->title="Shutter Lower Horizontal Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1610;
    x->title="Center of Circular Shutter";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1612;
    x->title="Radius of Circular Shutter";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1620;
    x->title="Vertices of the Polygonal Shutter";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1622;
    x->title="Shutter Presentation Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1623;
    x->title="Shutter Overlay Group";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1624;
    x->title="Shutter Presentation Color CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1700;
    x->title="Collimator Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1702;
    x->title="Collimator Left Vertical Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1704;
    x->title="Collimator Right Vertical Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1706;
    x->title="Collimator Upper Horizontal Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1708;
    x->title="Collimator Lower Horizontal Edge";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1710;
    x->title="Center of Circular Collimator";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1712;
    x->title="Radius of Circular Collimator";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1720;
    x->title="Vertices of the Polygonal Collimator";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1800;
    x->title="Acquisition Time Synchronized";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1801;
    x->title="Time Source";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1802;
    x->title="Time Distribution Protocol";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x1803;
    x->title="NTP Source Address";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2001;
    x->title="Page Number Vector";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2002;
    x->title="Frame Label Vector";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2003;
    x->title="Frame Primary Angle Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2004;
    x->title="Frame Secondary Angle Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2005;
    x->title="Slice Location Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2006;
    x->title="Display Window Label Vector";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2010;
    x->title="Nominal Scanned Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2020;
    x->title="Digitizing Device Transport Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2030;
    x->title="Rotation of Scanned Film";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2041;
    x->title="Biopsy Target Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2042;
    x->title="Target UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2043;
    x->title="Localizing Cursor Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2044;
    x->title="Calculated Target Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2045;
    x->title="Target Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x2046;
    x->title="Displayed Z Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3100;
    x->title="IVUS Acquisition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3101;
    x->title="IVUS Pullback Rate";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3102;
    x->title="IVUS Gated Rate";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3103;
    x->title="IVUS Pullback Start Frame Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3104;
    x->title="IVUS Pullback Stop Frame Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x3105;
    x->title="Lesion Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x4000;
    x->title="Acquisition Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5000;
    x->title="Output Power";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5010;
    x->title="Transducer Data";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5012;
    x->title="Focus Depth";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5020;
    x->title="Processing Function";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5021;
    x->title="Postprocessing Function";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5022;
    x->title="Mechanical Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5024;
    x->title="Bone Thermal Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5026;
    x->title="Cranial Thermal Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5027;
    x->title="Soft Tissue Thermal Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5028;
    x->title="Soft Tissue-focus Thermal Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5029;
    x->title="Soft Tissue-surface Thermal Index";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5030;
    x->title="Dynamic Range";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5040;
    x->title="Total Gain";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5050;
    x->title="Depth of Scan Field";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5100;
    x->title="Patient Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5101;
    x->title="View Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5104;
    x->title="Projection Eponymous Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5210;
    x->title="Image Transformation Matrix";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x5212;
    x->title="Image Translation Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6000;
    x->title="Sensitivity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6011;
    x->title="Sequence of Ultrasound Regions";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6012;
    x->title="Region Spatial Format";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6014;
    x->title="Region Data Type";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6016;
    x->title="Region Flags";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6018;
    x->title="Region Location Min X0";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x601A;
    x->title="Region Location Min Y0";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x601C;
    x->title="Region Location Max X1";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x601E;
    x->title="Region Location Max Y1";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6020;
    x->title="Reference Pixel X0";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6022;
    x->title="Reference Pixel Y0";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6024;
    x->title="Physical Units X Direction";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6026;
    x->title="Physical Units Y Direction";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6028;
    x->title="Reference Pixel Physical Value X";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x602A;
    x->title="Reference Pixel Physical Value Y";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x602C;
    x->title="Physical Delta X";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x602E;
    x->title="Physical Delta Y";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6030;
    x->title="Transducer Frequency";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6031;
    x->title="Transducer Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6032;
    x->title="Pulse Repetition Frequency";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6034;
    x->title="Doppler Correction Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6036;
    x->title="Steering Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6038;
    x->title="Doppler Sample Volume X Position (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6039;
    x->title="Doppler Sample Volume X Position";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603A;
    x->title="Doppler Sample Volume Y Position (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603B;
    x->title="Doppler Sample Volume Y Position";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603C;
    x->title="TM-Line Position X0 (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603D;
    x->title="TM-Line Position X0";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603E;
    x->title="TM-Line Position Y0 (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x603F;
    x->title="TM-Line Position Y0";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6040;
    x->title="TM-Line Position X1 (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6041;
    x->title="TM-Line Position X1";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6042;
    x->title="TM-Line Position Y1 (Retired)";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6043;
    x->title="TM-Line Position Y1";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6044;
    x->title="Pixel Component Organization";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6046;
    x->title="Pixel Component Mask";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6048;
    x->title="Pixel Component Range Start";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x604A;
    x->title="Pixel Component Range Stop";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x604C;
    x->title="Pixel Component Physical Units";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x604E;
    x->title="Pixel Component Data Type";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6050;
    x->title="Number of Table Break Points";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6052;
    x->title="Table of X Break Points";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6054;
    x->title="Table of Y Break Points";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6056;
    x->title="Number of Table Entries";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6058;
    x->title="Table of Pixel Values";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x605A;
    x->title="Table of Parameter Values";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x6060;
    x->title="R Wave Time Vector";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7000;
    x->title="Detector Conditions Nominal Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7001;
    x->title="Detector Temperature";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7004;
    x->title="Detector Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7005;
    x->title="Detector Configuration";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7006;
    x->title="Detector Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7008;
    x->title="Detector Mode";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x700A;
    x->title="Detector ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x700C;
    x->title="Date of Last Detector Calibration";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x700E;
    x->title="Time of Last Detector Calibration";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7010;
    x->title="Exposures on Detector Since Last Calibration";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7011;
    x->title="Exposures on Detector Since Manufactured";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7012;
    x->title="Detector Time Since Last Exposure";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7014;
    x->title="Detector Active Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7016;
    x->title="Detector Activation Offset From Exposure";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x701A;
    x->title="Detector Binning";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7020;
    x->title="Detector Element Physical Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7022;
    x->title="Detector Element Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7024;
    x->title="Detector Active Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7026;
    x->title="Detector Active Dimension(s)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7028;
    x->title="Detector Active Origin";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x702A;
    x->title="Detector Manufacturer Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x702B;
    x->title="Detector Manufacturer's Model Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7030;
    x->title="Field of View Origin";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7032;
    x->title="Field of View Rotation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7034;
    x->title="Field of View Horizontal Flip";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7036;
    x->title="Pixel Data Area Origin Relative To FOV";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7038;
    x->title="Pixel Data Area Rotation Angle Relative To FOV";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7040;
    x->title="Grid Absorbing Material";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7041;
    x->title="Grid Spacing Material";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7042;
    x->title="Grid Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7044;
    x->title="Grid Pitch";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7046;
    x->title="Grid Aspect Ratio";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7048;
    x->title="Grid Period";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x704C;
    x->title="Grid Focal Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7050;
    x->title="Filter Material";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7052;
    x->title="Filter Thickness Minimum";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7054;
    x->title="Filter Thickness Maximum";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7056;
    x->title="Filter Beam Path Length Minimum";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7058;
    x->title="Filter Beam Path Length Maximum";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7060;
    x->title="Exposure Control Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7062;
    x->title="Exposure Control Mode Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7064;
    x->title="Exposure Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x7065;
    x->title="Phototimer Setting";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x8150;
    x->title="Exposure Time in µS";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x8151;
    x->title="X-Ray Tube Current in µA";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9004;
    x->title="Content Qualification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9005;
    x->title="Pulse Sequence Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9006;
    x->title="MR Imaging Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9008;
    x->title="Echo Pulse Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9009;
    x->title="Inversion Recovery";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9010;
    x->title="Flow Compensation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9011;
    x->title="Multiple Spin Echo";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9012;
    x->title="Multi-planar Excitation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9014;
    x->title="Phase Contrast";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9015;
    x->title="Time of Flight Contrast";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9016;
    x->title="Spoiling";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9017;
    x->title="Steady State Pulse Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9018;
    x->title="Echo Planar Pulse Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9019;
    x->title="Tag Angle First Axis";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9020;
    x->title="Magnetization Transfer";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9021;
    x->title="T2 Preparation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9022;
    x->title="Blood Signal Nulling";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9024;
    x->title="Saturation Recovery";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9025;
    x->title="Spectrally Selected Suppression";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9026;
    x->title="Spectrally Selected Excitation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9027;
    x->title="Spatial Pre-saturation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9028;
    x->title="Tagging";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9029;
    x->title="Oversampling Phase";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9030;
    x->title="Tag Spacing First Dimension";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9032;
    x->title="Geometry of k-Space Traversal";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9033;
    x->title="Segmented k-Space Traversal";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9034;
    x->title="Rectilinear Phase Encode Reordering";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9035;
    x->title="Tag Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9036;
    x->title="Partial Fourier Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9037;
    x->title="Cardiac Synchronization Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9041;
    x->title="Receive Coil Manufacturer Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9042;
    x->title="MR Receive Coil Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9043;
    x->title="Receive Coil Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9044;
    x->title="Quadrature Receive Coil";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9045;
    x->title="Multi-Coil Definition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9046;
    x->title="Multi-Coil Configuration";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9047;
    x->title="Multi-Coil Element Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9048;
    x->title="Multi-Coil Element Used";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9049;
    x->title="MR Transmit Coil Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9050;
    x->title="Transmit Coil Manufacturer Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9051;
    x->title="Transmit Coil Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9052;
    x->title="Spectral Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9053;
    x->title="Chemical Shift Reference";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9054;
    x->title="Volume Localization Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9058;
    x->title="MR Acquisition Frequency Encoding Steps";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9059;
    x->title="De-coupling";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9060;
    x->title="De-coupled Nucleus";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9061;
    x->title="De-coupling Frequency";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9062;
    x->title="De-coupling Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9063;
    x->title="De-coupling Chemical Shift Reference";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9064;
    x->title="k-space Filtering";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9065;
    x->title="Time Domain Filtering";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9066;
    x->title="Number of Zero Fills";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9067;
    x->title="Baseline Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9069;
    x->title="Parallel Reduction Factor In-plane";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9070;
    x->title="Cardiac R-R Interval Specified";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9073;
    x->title="Acquisition Duration";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9074;
    x->title="Frame Acquisition DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9075;
    x->title="Diffusion Directionality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9076;
    x->title="Diffusion Gradient Direction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9077;
    x->title="Parallel Acquisition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9078;
    x->title="Parallel Acquisition Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9079;
    x->title="Inversion Times";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9080;
    x->title="Metabolite Map Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9081;
    x->title="Partial Fourier";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9082;
    x->title="Effective Echo Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9083;
    x->title="Metabolite Map Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9084;
    x->title="Chemical Shift Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9085;
    x->title="Cardiac Signal Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9087;
    x->title="Diffusion b-value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9089;
    x->title="Diffusion Gradient Orientation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9090;
    x->title="Velocity Encoding Direction";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9091;
    x->title="Velocity Encoding Minimum Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9092;
    x->title="Velocity Encoding Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9093;
    x->title="Number of k-Space Trajectories";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9094;
    x->title="Coverage of k-Space";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9095;
    x->title="Spectroscopy Acquisition Phase Rows";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9096;
    x->title="Parallel Reduction Factor In-plane (Retired)";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9098;
    x->title="Transmitter Frequency";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9100;
    x->title="Resonant Nucleus";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9101;
    x->title="Frequency Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9103;
    x->title="MR Spectroscopy FOV/Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9104;
    x->title="Slab Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9105;
    x->title="Slab Orientation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9106;
    x->title="Mid Slab Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9107;
    x->title="MR Spatial Saturation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9112;
    x->title="MR Timing and Related Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9114;
    x->title="MR Echo Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9115;
    x->title="MR Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9117;
    x->title="MR Diffusion Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9118;
    x->title="Cardiac Synchronization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9119;
    x->title="MR Averages Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9125;
    x->title="MR FOV/Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9126;
    x->title="Volume Localization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9127;
    x->title="Spectroscopy Acquisition Data Columns";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9147;
    x->title="Diffusion Anisotropy Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9151;
    x->title="Frame Reference DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9152;
    x->title="MR Metabolite Map Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9155;
    x->title="Parallel Reduction Factor out-of-plane";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9159;
    x->title="Spectroscopy Acquisition Out-of-plane Phase Steps";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9166;
    x->title="Bulk Motion Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9168;
    x->title="Parallel Reduction Factor Second In-plane";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9169;
    x->title="Cardiac Beat Rejection Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9170;
    x->title="Respiratory Motion Compensation Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9171;
    x->title="Respiratory Signal Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9172;
    x->title="Bulk Motion Compensation Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9173;
    x->title="Bulk Motion Signal Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9174;
    x->title="Applicable Safety Standard Agency";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9175;
    x->title="Applicable Safety Standard Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9176;
    x->title="Operating Mode Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9177;
    x->title="Operating Mode Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9178;
    x->title="Operating Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9179;
    x->title="Specific Absorption Rate Definition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9180;
    x->title="Gradient Output Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9181;
    x->title="Specific Absorption Rate Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9182;
    x->title="Gradient Output";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9183;
    x->title="Flow Compensation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9184;
    x->title="Tagging Delay";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9185;
    x->title="Respiratory Motion Compensation Technique Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9186;
    x->title="Respiratory Signal Source ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9195;
    x->title="Chemical Shift Minimum Integration Limit in Hz";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9196;
    x->title="Chemical Shift Maximum Integration Limit in Hz";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9197;
    x->title="MR Velocity Encoding Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9198;
    x->title="First Order Phase Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9199;
    x->title="Water Referenced Phase Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9200;
    x->title="MR Spectroscopy Acquisition Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9214;
    x->title="Respiratory Cycle Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9217;
    x->title="Velocity Encoding Maximum Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9218;
    x->title="Tag Spacing Second Dimension";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9219;
    x->title="Tag Angle Second Axis";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9220;
    x->title="Frame Acquisition Duration";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9226;
    x->title="MR Image Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9227;
    x->title="MR Spectroscopy Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9231;
    x->title="MR Acquisition Phase Encoding Steps in-plane";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9232;
    x->title="MR Acquisition Phase Encoding Steps out-of-plane";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9234;
    x->title="Spectroscopy Acquisition Phase Columns";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9236;
    x->title="Cardiac Cycle Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9239;
    x->title="Specific Absorption Rate Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9240;
    x->title="RF Echo Train Length";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9241;
    x->title="Gradient Echo Train Length";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9250;
    x->title="Arterial Spin Labeling Contrast";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9251;
    x->title="MR Arterial Spin Labeling Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9252;
    x->title="ASL Technique Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9253;
    x->title="ASL Slab Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9254;
    x->title="ASL Slab Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9255;
    x->title="ASL Slab Orientation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9256;
    x->title="ASL Mid Slab Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9257;
    x->title="ASL Context";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9258;
    x->title="ASL Pulse Train Duration";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9259;
    x->title="ASL Crusher Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925A;
    x->title="ASL Crusher Flow Limit";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925B;
    x->title="ASL Crusher Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925C;
    x->title="ASL Bolus Cut-off Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925D;
    x->title="ASL Bolus Cut-off Timing Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925E;
    x->title="ASL Bolus Cut-off Technique";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x925F;
    x->title="ASL Bolus Cut-off Delay Time";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9260;
    x->title="ASL Slab Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9295;
    x->title="Chemical Shift Minimum Integration Limit in ppm";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9296;
    x->title="Chemical Shift Maximum Integration Limit in ppm";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9297;
    x->title="Water Reference Acquisition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9298;
    x->title="Echo Peak Position";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9301;
    x->title="CT Acquisition Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9302;
    x->title="Acquisition Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9303;
    x->title="Tube Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9304;
    x->title="CT Acquisition Details Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9305;
    x->title="Revolution Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9306;
    x->title="Single Collimation Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9307;
    x->title="Total Collimation Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9308;
    x->title="CT Table Dynamics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9309;
    x->title="Table Speed";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9310;
    x->title="Table Feed per Rotation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9311;
    x->title="Spiral Pitch Factor";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9312;
    x->title="CT Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9313;
    x->title="Data Collection Center (Patient)";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9314;
    x->title="CT Reconstruction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9315;
    x->title="Reconstruction Algorithm";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9316;
    x->title="Convolution Kernel Group";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9317;
    x->title="Reconstruction Field of View";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9318;
    x->title="Reconstruction Target Center (Patient)";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9319;
    x->title="Reconstruction Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9320;
    x->title="Image Filter";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9321;
    x->title="CT Exposure Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9322;
    x->title="Reconstruction Pixel Spacing";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9323;
    x->title="Exposure Modulation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9324;
    x->title="Estimated Dose Saving";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9325;
    x->title="CT X-Ray Details Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9326;
    x->title="CT Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9327;
    x->title="Table Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9328;
    x->title="Exposure Time in ms";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9329;
    x->title="CT Image Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9330;
    x->title="X-Ray Tube Current in mA";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9332;
    x->title="Exposure in mAs";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9333;
    x->title="Constant Volume Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9334;
    x->title="Fluoroscopy Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9335;
    x->title="Distance Source to Data Collection Center";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9337;
    x->title="Contrast/Bolus Agent Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9338;
    x->title="Contrast/Bolus Ingredient Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9340;
    x->title="Contrast Administration Profile Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9341;
    x->title="Contrast/Bolus Usage Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9342;
    x->title="Contrast/Bolus Agent Administered";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9343;
    x->title="Contrast/Bolus Agent Detected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9344;
    x->title="Contrast/Bolus Agent Phase";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9345;
    x->title="CTDIvol";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9346;
    x->title="CTDI Phantom Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9351;
    x->title="Calcium Scoring Mass Factor Patient";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9352;
    x->title="Calcium Scoring Mass Factor Device";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9353;
    x->title="Energy Weighting Factor";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9360;
    x->title="CT Additional X-Ray Source Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9401;
    x->title="Projection Pixel Calibration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9402;
    x->title="Distance Source to Isocenter";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9403;
    x->title="Distance Object to Table Top";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9404;
    x->title="Object Pixel Spacing in Center of Beam";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9405;
    x->title="Positioner Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9406;
    x->title="Table Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9407;
    x->title="Collimator Shape Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9410;
    x->title="Planes in Acquisition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9412;
    x->title="XA/XRF Frame Characteristics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9417;
    x->title="Frame Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9420;
    x->title="X-Ray Receptor Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9423;
    x->title="Acquisition Protocol Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9424;
    x->title="Acquisition Protocol Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9425;
    x->title="Contrast/Bolus Ingredient Opaque";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9426;
    x->title="Distance Receptor Plane to Detector Housing";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9427;
    x->title="Intensifier Active Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9428;
    x->title="Intensifier Active Dimension(s)";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9429;
    x->title="Physical Detector Size";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9430;
    x->title="Position of Isocenter Projection";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9432;
    x->title="Field of View Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9433;
    x->title="Field of View Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9434;
    x->title="Exposure Control Sensing Regions Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9435;
    x->title="Exposure Control Sensing Region Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9436;
    x->title="Exposure Control Sensing Region Left Vertical Edge";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9437;
    x->title="Exposure Control Sensing Region Right Vertical Edge";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9438;
    x->title="Exposure Control Sensing Region Upper Horizontal Edge";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9439;
    x->title="Exposure Control Sensing Region Lower Horizontal Edge";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9440;
    x->title="Center of Circular Exposure Control Sensing Region";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9441;
    x->title="Radius of Circular Exposure Control Sensing Region";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9442;
    x->title="Vertices of the Polygonal Exposure Control Sensing Region";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9445;
    x->title="";
    x->vr="";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9447;
    x->title="Column Angulation (Patient)";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9449;
    x->title="Beam Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9451;
    x->title="Frame Detector Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9452;
    x->title="Calculated Anatomy Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9455;
    x->title="Calibration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9456;
    x->title="Object Thickness Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9457;
    x->title="Plane Identification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9461;
    x->title="Field of View Dimension(s) in Float";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9462;
    x->title="Isocenter Reference System Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9463;
    x->title="Positioner Isocenter Primary Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9464;
    x->title="Positioner Isocenter Secondary Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9465;
    x->title="Positioner Isocenter Detector Rotation Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9466;
    x->title="Table X Position to Isocenter";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9467;
    x->title="Table Y Position to Isocenter";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9468;
    x->title="Table Z Position to Isocenter";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9469;
    x->title="Table Horizontal Rotation Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9470;
    x->title="Table Head Tilt Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9471;
    x->title="Table Cradle Tilt Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9472;
    x->title="Frame Display Shutter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9473;
    x->title="Acquired Image Area Dose Product";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9474;
    x->title="C-arm Positioner Tabletop Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9476;
    x->title="X-Ray Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9477;
    x->title="Irradiation Event Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9504;
    x->title="X-Ray 3D Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9506;
    x->title="Contributing Sources Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9507;
    x->title="X-Ray 3D Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9508;
    x->title="Primary Positioner Scan Arc";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9509;
    x->title="Secondary Positioner Scan Arc";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9510;
    x->title="Primary Positioner Scan Start Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9511;
    x->title="Secondary Positioner Scan Start Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9514;
    x->title="Primary Positioner Increment";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9515;
    x->title="Secondary Positioner Increment";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9516;
    x->title="Start Acquisition DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9517;
    x->title="End Acquisition DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9518;
    x->title="Primary Positioner Increment Sign";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9519;
    x->title="Secondary Positioner Increment Sign";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9524;
    x->title="Application Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9525;
    x->title="Application Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9526;
    x->title="Application Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9527;
    x->title="Algorithm Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9528;
    x->title="Algorithm Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9530;
    x->title="X-Ray 3D Reconstruction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9531;
    x->title="Reconstruction Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9538;
    x->title="Per Projection Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9541;
    x->title="Detector Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9542;
    x->title="X-Ray Acquisition Dose Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9543;
    x->title="X-Ray Source Isocenter Primary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9544;
    x->title="X-Ray Source Isocenter Secondary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9545;
    x->title="Breast Support Isocenter Primary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9546;
    x->title="Breast Support Isocenter Secondary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9547;
    x->title="Breast Support X Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9548;
    x->title="Breast Support Y Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9549;
    x->title="Breast Support Z Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9550;
    x->title="Detector Isocenter Primary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9551;
    x->title="Detector Isocenter Secondary Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9552;
    x->title="Detector X Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9553;
    x->title="Detector Y Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9554;
    x->title="Detector Z Position to Isocenter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9555;
    x->title="X-Ray Grid Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9556;
    x->title="X-Ray Filter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9557;
    x->title="Detector Active Area TLHC Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9558;
    x->title="Detector Active Area Orientation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9559;
    x->title="Positioner Primary Angle Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9601;
    x->title="Diffusion b-matrix Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9602;
    x->title="Diffusion b-value XX";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9603;
    x->title="Diffusion b-value XY";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9604;
    x->title="Diffusion b-value XZ";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9605;
    x->title="Diffusion b-value YY";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9606;
    x->title="Diffusion b-value YZ";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9607;
    x->title="Diffusion b-value ZZ";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9621;
    x->title="Functional MR Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9622;
    x->title="Functional Settling Phase Frames Present";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9623;
    x->title="Functional Sync Pulse";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9624;
    x->title="Settling Phase Frame";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9701;
    x->title="Decay Correction DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9715;
    x->title="Start Density Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9716;
    x->title="Start Relative Density Difference Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9717;
    x->title="Start Cardiac Trigger Count Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9718;
    x->title="Start Respiratory Trigger Count Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9719;
    x->title="Termination Counts Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9720;
    x->title="Termination Density Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9721;
    x->title="Termination Relative Density Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9722;
    x->title="Termination Time Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9723;
    x->title="Termination Cardiac Trigger Count Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9724;
    x->title="Termination Respiratory Trigger Count Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9725;
    x->title="Detector Geometry";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9726;
    x->title="Transverse Detector Separation";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9727;
    x->title="Axial Detector Dimension";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9729;
    x->title="Radiopharmaceutical Agent Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9732;
    x->title="PET Frame Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9733;
    x->title="PET Detector Motion Details Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9734;
    x->title="PET Table Dynamics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9735;
    x->title="PET Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9736;
    x->title="PET Frame Correction Factors Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9737;
    x->title="Radiopharmaceutical Usage Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9738;
    x->title="Attenuation Correction Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9739;
    x->title="Number of Iterations";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9740;
    x->title="Number of Subsets";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9749;
    x->title="PET Reconstruction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9751;
    x->title="PET Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9755;
    x->title="Time of Flight Information Used";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9756;
    x->title="Reconstruction Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9758;
    x->title="Decay Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9759;
    x->title="Attenuation Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9760;
    x->title="Scatter Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9761;
    x->title="Dead Time Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9762;
    x->title="Gantry Motion Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9763;
    x->title="Patient Motion Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9764;
    x->title="Count Loss Normalization Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9765;
    x->title="Randoms Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9766;
    x->title="Non-uniform Radial Sampling Corrected";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9767;
    x->title="Sensitivity Calibrated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9768;
    x->title="Detector Normalization Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9769;
    x->title="Iterative Reconstruction Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9770;
    x->title="Attenuation Correction Temporal Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9771;
    x->title="Patient Physiological State Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9772;
    x->title="Patient Physiological State Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9801;
    x->title="Depth(s) of Focus";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9803;
    x->title="Excluded Intervals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9804;
    x->title="Exclusion Start DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9805;
    x->title="Exclusion Duration";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9806;
    x->title="US Image Description Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9807;
    x->title="Image Data Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9808;
    x->title="Data Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9809;
    x->title="Transducer Scan Pattern Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x980B;
    x->title="Aliased Data Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x980C;
    x->title="Position Measuring Device Used";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x980D;
    x->title="Transducer Geometry Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x980E;
    x->title="Transducer Beam Steering Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x980F;
    x->title="Transducer Application Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0x9810;
    x->title="Zero Velocity Pixel Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0xA001;
    x->title="Contributing Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0xA002;
    x->title="Contribution DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0018;
    x->tag[1]=0xA003;
    x->title="Contribution Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x000D;
    x->title="Study Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x000E;
    x->title="Series Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0010;
    x->title="Study ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0011;
    x->title="Series Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0012;
    x->title="Acquisition Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0013;
    x->title="Instance Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0014;
    x->title="Isotope Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0015;
    x->title="Phase Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0016;
    x->title="Interval Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0017;
    x->title="Time Slot Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0018;
    x->title="Angle Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0019;
    x->title="Item Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0020;
    x->title="Patient Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0022;
    x->title="Overlay Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0024;
    x->title="Curve Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0026;
    x->title="LUT Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0030;
    x->title="Image Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0032;
    x->title="Image Position (Patient)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0035;
    x->title="Image Orientation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0037;
    x->title="Image Orientation (Patient)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0050;
    x->title="Location";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0052;
    x->title="Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0060;
    x->title="Laterality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0062;
    x->title="Image Laterality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0070;
    x->title="Image Geometry Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0080;
    x->title="Masking Image";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x00AA;
    x->title="Report Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0100;
    x->title="Temporal Position Identifier";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0105;
    x->title="Number of Temporal Positions";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0110;
    x->title="Temporal Resolution";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0200;
    x->title="Synchronization Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x0242;
    x->title="SOP Instance UID of Concatenation Source";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1000;
    x->title="Series in Study";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1001;
    x->title="Acquisitions in Series";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1002;
    x->title="Images in Acquisition";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1003;
    x->title="Images in Series";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1004;
    x->title="Acquisitions in Study";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1005;
    x->title="Images in Study";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1020;
    x->title="Reference";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1040;
    x->title="Position Reference Indicator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1041;
    x->title="Slice Location";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1070;
    x->title="Other Study Numbers";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1200;
    x->title="Number of Patient Related Studies";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1202;
    x->title="Number of Patient Related Series";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1204;
    x->title="Number of Patient Related Instances";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1206;
    x->title="Number of Study Related Series";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1208;
    x->title="Number of Study Related Instances";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x1209;
    x->title="Number of Series Related Instances";
    x->vr="IS";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0020;
    //x->tag[1]=0x31xx;
    //x->title="Source Image IDs";
    //x->vr="CS";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3401;
    x->title="Modifying Device ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3402;
    x->title="Modified Image ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3403;
    x->title="Modified Image Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3404;
    x->title="Modifying Device Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3405;
    x->title="Modified Image Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x3406;
    x->title="Modified Image Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x4000;
    x->title="Image Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x5000;
    x->title="Original Image Identification";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x5002;
    x->title="Original Image Identification Nomenclature";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9056;
    x->title="Stack ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9057;
    x->title="In-Stack Position Number";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9071;
    x->title="Frame Anatomy Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9072;
    x->title="Frame Laterality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9111;
    x->title="Frame Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9113;
    x->title="Plane Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9116;
    x->title="Plane Orientation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9128;
    x->title="Temporal Position Index";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9153;
    x->title="Nominal Cardiac Trigger Delay Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9154;
    x->title="Nominal Cardiac Trigger Time Prior To R-Peak";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9155;
    x->title="Actual Cardiac Trigger Time Prior To R-Peak";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9156;
    x->title="Frame Acquisition Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9157;
    x->title="Dimension Index Values";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9158;
    x->title="Frame Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9161;
    x->title="Concatenation UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9162;
    x->title="In-concatenation Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9163;
    x->title="In-concatenation Total Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9164;
    x->title="Dimension Organization UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9165;
    x->title="Dimension Index Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9167;
    x->title="Functional Group Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9170;
    x->title="Unassigned Shared Converted Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9171;
    x->title="Unassigned Per-Frame Converted Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9172;
    x->title="Conversion Source Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9213;
    x->title="Dimension Index Private Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9221;
    x->title="Dimension Organization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9222;
    x->title="Dimension Index Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9228;
    x->title="Concatenation Frame Offset Number";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9238;
    x->title="Functional Group Private Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9241;
    x->title="Nominal Percentage of Cardiac Phase";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9245;
    x->title="Nominal Percentage of Respiratory Phase";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9246;
    x->title="Starting Respiratory Amplitude";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9247;
    x->title="Starting Respiratory Phase";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9248;
    x->title="Ending Respiratory Amplitude";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9249;
    x->title="Ending Respiratory Phase";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9250;
    x->title="Respiratory Trigger Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9251;
    x->title="R-R Interval Time Nominal";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9252;
    x->title="Actual Cardiac Trigger Delay Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9253;
    x->title="Respiratory Synchronization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9254;
    x->title="Respiratory Interval Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9255;
    x->title="Nominal Respiratory Trigger Delay Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9256;
    x->title="Respiratory Trigger Delay Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9257;
    x->title="Actual Respiratory Trigger Delay Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9301;
    x->title="Image Position (Volume)";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9302;
    x->title="Image Orientation (Volume)";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9307;
    x->title="Ultrasound Acquisition Geometry";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9308;
    x->title="Apex Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9309;
    x->title="Volume to Transducer Mapping Matrix";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930A;
    x->title="Volume to Table Mapping Matrix";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930B;
    x->title="Volume to Transducer Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930C;
    x->title="Patient Frame of Reference Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930D;
    x->title="Temporal Position Time Offset";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930E;
    x->title="Plane Position (Volume) Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x930F;
    x->title="Plane Orientation (Volume) Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9310;
    x->title="Temporal Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9311;
    x->title="Dimension Organization Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9312;
    x->title="Volume Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9313;
    x->title="Table Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9421;
    x->title="Dimension Description Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9450;
    x->title="Patient Orientation in Frame Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9453;
    x->title="Frame Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9518;
    x->title="Acquisition Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9529;
    x->title="Contributing SOP Instances Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0020;
    x->tag[1]=0x9536;
    x->title="Reconstruction Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0001;
    x->title="Light Path Filter Pass-Through Wavelength";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0002;
    x->title="Light Path Filter Pass Band";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0003;
    x->title="Image Path Filter Pass-Through Wavelength";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0004;
    x->title="Image Path Filter Pass Band";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0005;
    x->title="Patient Eye Movement Commanded";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0006;
    x->title="Patient Eye Movement Command Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0007;
    x->title="Spherical Lens Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0008;
    x->title="Cylinder Lens Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0009;
    x->title="Cylinder Axis";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x000A;
    x->title="Emmetropic Magnification";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x000B;
    x->title="Intra Ocular Pressure";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x000C;
    x->title="Horizontal Field of View";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x000D;
    x->title="Pupil Dilated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x000E;
    x->title="Degree of Dilation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0010;
    x->title="Stereo Baseline Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0011;
    x->title="Stereo Baseline Displacement";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0012;
    x->title="Stereo Horizontal Pixel Offset";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0013;
    x->title="Stereo Vertical Pixel Offset";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0014;
    x->title="Stereo Rotation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0015;
    x->title="Acquisition Device Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0016;
    x->title="Illumination Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0017;
    x->title="Light Path Filter Type Stack Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0018;
    x->title="Image Path Filter Type Stack Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0019;
    x->title="Lenses Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x001A;
    x->title="Channel Description Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x001B;
    x->title="Refractive State Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x001C;
    x->title="Mydriatic Agent Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x001D;
    x->title="Relative Image Position Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x001E;
    x->title="Camera Angle of View";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0020;
    x->title="Stereo Pairs Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0021;
    x->title="Left Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0022;
    x->title="Right Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0028;
    x->title="Stereo Pairs Present";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0030;
    x->title="Axial Length of the Eye";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0031;
    x->title="Ophthalmic Frame Location Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0032;
    x->title="Reference Coordinates";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0035;
    x->title="Depth Spatial Resolution";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0036;
    x->title="Maximum Depth Distortion";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0037;
    x->title="Along-scan Spatial Resolution";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0038;
    x->title="Maximum Along-scan Distortion";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0039;
    x->title="Ophthalmic Image Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0041;
    x->title="Depth of Transverse Image";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0042;
    x->title="Mydriatic Agent Concentration Units Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0048;
    x->title="Across-scan Spatial Resolution";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0049;
    x->title="Maximum Across-scan Distortion";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x004E;
    x->title="Mydriatic Agent Concentration";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0055;
    x->title="Illumination Wave Length";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0056;
    x->title="Illumination Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0057;
    x->title="Illumination Bandwidth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x0058;
    x->title="Mydriatic Agent Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1007;
    x->title="Ophthalmic Axial Measurements Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1008;
    x->title="Ophthalmic Axial Measurements Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1009;
    x->title="Ophthalmic Axial Measurements Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1010;
    x->title="Ophthalmic Axial Length Measurements Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1012;
    x->title="Ophthalmic Axial Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1019;
    x->title="Ophthalmic Axial Length";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1024;
    x->title="Lens Status Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1025;
    x->title="Vitreous Status Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1028;
    x->title="IOL Formula Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1029;
    x->title="IOL Formula Detail";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1033;
    x->title="Keratometer Index";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1035;
    x->title="Source of Ophthalmic Axial Length Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1037;
    x->title="Target Refraction";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1039;
    x->title="Refractive Procedure Occurred";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1040;
    x->title="Refractive Surgery Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1044;
    x->title="Ophthalmic Ultrasound Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1050;
    x->title="Ophthalmic Axial Length Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1053;
    x->title="IOL Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1054;
    x->title="Predicted Refractive Error";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1059;
    x->title="Ophthalmic Axial Length Velocity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1065;
    x->title="Lens Status Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1066;
    x->title="Vitreous Status Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1090;
    x->title="IOL Power Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1092;
    x->title="Lens Constant Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1093;
    x->title="IOL Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1094;
    x->title="Lens Constant Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1095;
    x->title="Implant Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1096;
    x->title="Keratometry Measurement Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1097;
    x->title="Implant Part Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1100;
    x->title="Referenced Ophthalmic Axial Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1101;
    x->title="Ophthalmic Axial Length Measurements Segment Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1103;
    x->title="Refractive Error Before Refractive Surgery Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1121;
    x->title="IOL Power For Exact Emmetropia";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1122;
    x->title="IOL Power For Exact Target Refraction";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1125;
    x->title="Anterior Chamber Depth Definition Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1127;
    x->title="Lens Thickness Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1128;
    x->title="Anterior Chamber Depth Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1130;
    x->title="Lens Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1131;
    x->title="Anterior Chamber Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1132;
    x->title="Source of Lens Thickness Data Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1133;
    x->title="Source of Anterior Chamber Depth Data Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1134;
    x->title="Source of Refractive Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1135;
    x->title="Source of Refractive Measurements Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1140;
    x->title="Ophthalmic Axial Length Measurement Modified";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1150;
    x->title="Ophthalmic Axial Length Data Source Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1153;
    x->title="Ophthalmic Axial Length Acquisition Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1155;
    x->title="Signal to Noise Ratio";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1159;
    x->title="Ophthalmic Axial Length Data Source Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1210;
    x->title="Ophthalmic Axial Length Measurements Total Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1211;
    x->title="Ophthalmic Axial Length Measurements Segmental Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1212;
    x->title="Ophthalmic Axial Length Measurements Length Summation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1220;
    x->title="Ultrasound Ophthalmic Axial Length Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1225;
    x->title="Optical Ophthalmic Axial Length Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1230;
    x->title="Ultrasound Selected Ophthalmic Axial Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1250;
    x->title="Ophthalmic Axial Length Selection Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1255;
    x->title="Optical Selected Ophthalmic Axial Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1257;
    x->title="Selected Segmental Ophthalmic Axial Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1260;
    x->title="Selected Total Ophthalmic Axial Length Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1262;
    x->title="Ophthalmic Axial Length Quality Metric Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1265;
    x->title="Ophthalmic Axial Length Quality Metric Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1273;
    x->title="Ophthalmic Axial Length Quality Metric Type Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1300;
    x->title="Intraocular Lens Calculations Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1310;
    x->title="Intraocular Lens Calculations Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1330;
    x->title="Referenced Ophthalmic Axial Length Measurement QC Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1415;
    x->title="Ophthalmic Mapping Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1420;
    x->title="Acquisition Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1423;
    x->title="Acquisition Method Algorithm Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1436;
    x->title="Ophthalmic Thickness Map Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1443;
    x->title="Ophthalmic Thickness Mapping Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1445;
    x->title="Retinal Thickness Definition Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1450;
    x->title="Pixel Value Mapping to Coded Concept Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1452;
    x->title="Mapped Pixel Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1454;
    x->title="Pixel Value Mapping Explanation";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1458;
    x->title="Ophthalmic Thickness Map Quality Threshold Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1460;
    x->title="Ophthalmic Thickness Map Threshold Quality Rating";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1463;
    x->title="Anatomic Structure Reference Point";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1465;
    x->title="Registration to Localizer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1466;
    x->title="Registered Localizer Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1467;
    x->title="Registered Localizer Top Left Hand Corner";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1468;
    x->title="Registered Localizer Bottom Right Hand Corner";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1470;
    x->title="Ophthalmic Thickness Map Quality Rating Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1472;
    x->title="Relevant OPT Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1512;
    x->title="Transformation Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1513;
    x->title="Transformation Algorithm Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1515;
    x->title="Ophthalmic Axial Length Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1517;
    x->title="Ophthalmic FOV";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1518;
    x->title="Two Dimensional to Three Dimensional Map Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1525;
    x->title="Wide Field Ophthalmic Photography Quality Rating Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1526;
    x->title="Wide Field Ophthalmic Photography Quality Threshold Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1527;
    x->title="Wide Field Ophthalmic Photography Threshold Quality Rating";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1528;
    x->title="X Coordinates Center Pixel View Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1529;
    x->title="Y Coordinates Center Pixel View Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1530;
    x->title="Number of Map Points";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0022;
    x->tag[1]=0x1531;
    x->title="Two Dimensional to Three Dimensional Map Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0010;
    x->title="Visual Field Horizontal Extent";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0011;
    x->title="Visual Field Vertical Extent";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0012;
    x->title="Visual Field Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0016;
    x->title="Screening Test Mode Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0018;
    x->title="Maximum Stimulus Luminance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0020;
    x->title="Background Luminance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0021;
    x->title="Stimulus Color Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0024;
    x->title="Background Illumination Color Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0025;
    x->title="Stimulus Area";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0028;
    x->title="Stimulus Presentation Time";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0032;
    x->title="Fixation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0033;
    x->title="Fixation Monitoring Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0034;
    x->title="Visual Field Catch Trial Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0035;
    x->title="Fixation Checked Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0036;
    x->title="Patient Not Properly Fixated Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0037;
    x->title="Presented Visual Stimuli Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0038;
    x->title="Number of Visual Stimuli";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0039;
    x->title="Excessive Fixation Losses Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0040;
    x->title="Excessive Fixation Losses";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0042;
    x->title="Stimuli Retesting Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0044;
    x->title="Comments on Patient's Performance of Visual Field";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0045;
    x->title="False Negatives Estimate Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0046;
    x->title="False Negatives Estimate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0048;
    x->title="Negative Catch Trials Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0050;
    x->title="False Negatives Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0051;
    x->title="Excessive False Negatives Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0052;
    x->title="Excessive False Negatives";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0053;
    x->title="False Positives Estimate Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0054;
    x->title="False Positives Estimate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0055;
    x->title="Catch Trials Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0056;
    x->title="Positive Catch Trials Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0057;
    x->title="Test Point Normals Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0058;
    x->title="Test Point Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0059;
    x->title="Global Deviation Probability Normals Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0060;
    x->title="False Positives Quantity";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0061;
    x->title="Excessive False Positives Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0062;
    x->title="Excessive False Positives";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0063;
    x->title="Visual Field Test Normals Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0064;
    x->title="Results Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0065;
    x->title="Age Corrected Sensitivity Deviation Algorithm Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0066;
    x->title="Global Deviation From Normal";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0067;
    x->title="Generalized Defect Sensitivity Deviation Algorithm Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0068;
    x->title="Localized Deviation From Normal";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0069;
    x->title="Patient Reliability Indicator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0070;
    x->title="Visual Field Mean Sensitivity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0071;
    x->title="Global Deviation Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0072;
    x->title="Local Deviation Probability Normals Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0073;
    x->title="Localized Deviation Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0074;
    x->title="Short Term Fluctuation Calculated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0075;
    x->title="Short Term Fluctuation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0076;
    x->title="Short Term Fluctuation Probability Calculated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0077;
    x->title="Short Term Fluctuation Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0078;
    x->title="Corrected Localized Deviation From Normal Calculated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0079;
    x->title="Corrected Localized Deviation From Normal";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0080;
    x->title="Corrected Localized Deviation From Normal Probability Calculated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0081;
    x->title="Corrected Localized Deviation From Normal Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0083;
    x->title="Global Deviation Probability Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0085;
    x->title="Localized Deviation Probability Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0086;
    x->title="Foveal Sensitivity Measured";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0087;
    x->title="Foveal Sensitivity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0088;
    x->title="Visual Field Test Duration";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0089;
    x->title="Visual Field Test Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0090;
    x->title="Visual Field Test Point X-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0091;
    x->title="Visual Field Test Point Y-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0092;
    x->title="Age Corrected Sensitivity Deviation Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0093;
    x->title="Stimulus Results";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0094;
    x->title="Sensitivity Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0095;
    x->title="Retest Stimulus Seen";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0096;
    x->title="Retest Sensitivity Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0097;
    x->title="Visual Field Test Point Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0098;
    x->title="Quantified Defect";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0100;
    x->title="Age Corrected Sensitivity Deviation Probability Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0102;
    x->title="Generalized Defect Corrected Sensitivity Deviation Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0103;
    x->title="Generalized Defect Corrected Sensitivity Deviation Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0104;
    x->title="Generalized Defect Corrected Sensitivity Deviation Probability Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0105;
    x->title="Minimum Sensitivity Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0106;
    x->title="Blind Spot Localized";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0107;
    x->title="Blind Spot X-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0108;
    x->title="Blind Spot Y-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0110;
    x->title="Visual Acuity Measurement Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0112;
    x->title="Refractive Parameters Used on Patient Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0113;
    x->title="Measurement Laterality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0114;
    x->title="Ophthalmic Patient Clinical Information Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0115;
    x->title="Ophthalmic Patient Clinical Information Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0117;
    x->title="Foveal Point Normative Data Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0118;
    x->title="Foveal Point Probability Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0120;
    x->title="Screening Baseline Measured";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0122;
    x->title="Screening Baseline Measured Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0124;
    x->title="Screening Baseline Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0126;
    x->title="Screening Baseline Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0202;
    x->title="Algorithm Source";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0306;
    x->title="Data Set Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0307;
    x->title="Data Set Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0308;
    x->title="Data Set Source";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0309;
    x->title="Data Set Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0317;
    x->title="Visual Field Test Reliability Global Index Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0320;
    x->title="Visual Field Global Results Index Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0325;
    x->title="Data Observation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0338;
    x->title="Index Normals Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0341;
    x->title="Index Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0024;
    x->tag[1]=0x0344;
    x->title="Index Probability Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0002;
    x->title="Samples per Pixel";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0003;
    x->title="Samples per Pixel Used";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0004;
    x->title="Photometric Interpretation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0005;
    x->title="Image Dimensions";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0006;
    x->title="Planar Configuration";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0008;
    x->title="Number of Frames";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0009;
    x->title="Frame Increment Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x000A;
    x->title="Frame Dimension Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0010;
    x->title="Rows";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0011;
    x->title="Columns";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0012;
    x->title="Planes";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0014;
    x->title="Ultrasound Color Data Present";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0020;
    x->title="";
    x->vr="";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0030;
    x->title="Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0031;
    x->title="Zoom Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0032;
    x->title="Zoom Center";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0034;
    x->title="Pixel Aspect Ratio";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0040;
    x->title="Image Format";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0050;
    x->title="Manipulated Image";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0051;
    x->title="Corrected Image";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x005F;
    x->title="Compression Recognition Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0060;
    x->title="Compression Code";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0061;
    x->title="Compression Originator";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0062;
    x->title="Compression Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0063;
    x->title="Compression Description";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0065;
    x->title="Compression Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0066;
    x->title="Compression Step Pointers";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0068;
    x->title="Repeat Interval";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0069;
    x->title="Bits Grouped";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0070;
    x->title="Perimeter Table";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0071;
    x->title="Perimeter Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0080;
    x->title="Predictor Rows";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0081;
    x->title="Predictor Columns";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0082;
    x->title="Predictor Constants";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0090;
    x->title="Blocked Pixels";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0091;
    x->title="Block Rows";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0092;
    x->title="Block Columns";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0093;
    x->title="Row Overlap";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0094;
    x->title="Column Overlap";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0100;
    x->title="Bits Allocated";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0101;
    x->title="Bits Stored";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0102;
    x->title="High Bit";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0103;
    x->title="Pixel Representation";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0104;
    x->title="Smallest Valid Pixel Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0105;
    x->title="Largest Valid Pixel Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0106;
    x->title="Smallest Image Pixel Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0107;
    x->title="Largest Image Pixel Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0108;
    x->title="Smallest Pixel Value in Series";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0109;
    x->title="Largest Pixel Value in Series";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0110;
    x->title="Smallest Image Pixel Value in Plane";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0111;
    x->title="Largest Image Pixel Value in Plane";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0120;
    x->title="Pixel Padding Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0121;
    x->title="Pixel Padding Range Limit";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0122;
    x->title="Float Pixel Padding Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0123;
    x->title="Double Float Pixel Padding Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0124;
    x->title="Float Pixel Padding Range Limit";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0125;
    x->title="Double Float Pixel Padding Range Limit";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0200;
    x->title="Image Location";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0300;
    x->title="Quality Control Image";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0301;
    x->title="Burned In Annotation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0302;
    x->title="Recognizable Visual Features";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0303;
    x->title="Longitudinal Temporal Information Modified";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0304;
    x->title="Referenced Color Palette Instance UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0400;
    x->title="Transform Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0401;
    x->title="Transform Version Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0402;
    x->title="Number of Transform Steps";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0403;
    x->title="Sequence of Compressed Data";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0404;
    x->title="Details of Coefficients";
    x->vr="AT";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x04x0;
    //x->title="Rows For Nth Order Coefficients";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x04x1;
    //x->title="Columns For Nth Order Coefficients";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x04x2;
    //x->title="Coefficient Coding";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x04x3;
    //x->title="Coefficient Coding Pointers";
    //x->vr="AT";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0700;
    x->title="DCT Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0701;
    x->title="Data Block Description";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0702;
    x->title="Data Block";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0710;
    x->title="Normalization Factor Format";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0720;
    x->title="Zonal Map Number Format";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0721;
    x->title="Zonal Map Location";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0722;
    x->title="Zonal Map Format";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0730;
    x->title="Adaptive Map Format";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0740;
    x->title="Code Number Format";
    x->vr="US";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x08x0;
    //x->title="Code Label";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x08x2;
    //x->title="Number of Tables";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x08x3;
    //x->title="Code Table Location";
    //x->vr="AT";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x08x4;
    //x->title="Bits For Code Word";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x0028;
    //x->tag[1]=0x08x8;
    //x->title="Image Data Location";
    //x->vr="AT";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0A02;
    x->title="Pixel Spacing Calibration Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x0A04;
    x->title="Pixel Spacing Calibration Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1040;
    x->title="Pixel Intensity Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1041;
    x->title="Pixel Intensity Relationship Sign";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1050;
    x->title="Window Center";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1051;
    x->title="Window Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1052;
    x->title="Rescale Intercept";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1053;
    x->title="Rescale Slope";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1054;
    x->title="Rescale Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1055;
    x->title="Window Center & Width Explanation";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1056;
    x->title="VOI LUT Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1080;
    x->title="Gray Scale";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1090;
    x->title="Recommended Viewing Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1100;
    x->title="Gray Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1101;
    x->title="Red Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1102;
    x->title="Green Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1103;
    x->title="Blue Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1104;
    x->title="Alpha Palette Color Lookup Table Descriptor";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1111;
    x->title="Large Red Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1112;
    x->title="Large Green Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1113;
    x->title="Large Blue Palette Color Lookup Table Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1199;
    x->title="Palette Color Lookup Table UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1200;
    x->title="Gray Lookup Table Data";
    x->vr="SS or OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1201;
    x->title="Red Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1202;
    x->title="Green Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1203;
    x->title="Blue Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1204;
    x->title="Alpha Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1211;
    x->title="Large Red Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1212;
    x->title="Large Green Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1213;
    x->title="Large Blue Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1214;
    x->title="Large Palette Color Lookup Table UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1221;
    x->title="Segmented Red Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1222;
    x->title="Segmented Green Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1223;
    x->title="Segmented Blue Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1224;
    x->title="Segmented Alpha Palette Color Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1300;
    x->title="Breast Implant Present";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1350;
    x->title="Partial View";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1351;
    x->title="Partial View Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1352;
    x->title="Partial View Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x135A;
    x->title="Spatial Locations Preserved";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1401;
    x->title="Data Frame Assignment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1402;
    x->title="Data Path Assignment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1403;
    x->title="Bits Mapped to Color Lookup Table";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1404;
    x->title="Blending LUT 1 Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1405;
    x->title="Blending LUT 1 Transfer Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1406;
    x->title="Blending Weight Constant";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1407;
    x->title="Blending Lookup Table Descriptor";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1408;
    x->title="Blending Lookup Table Data";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x140B;
    x->title="Enhanced Palette Color Lookup Table Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x140C;
    x->title="Blending LUT 2 Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x140D;
    x->title="Blending LUT 2 Transfer Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x140E;
    x->title="Data Path ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x140F;
    x->title="RGB LUT Transfer Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x1410;
    x->title="Alpha LUT Transfer Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x2000;
    x->title="ICC Profile";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x2002;
    x->title="Color Space";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x2110;
    x->title="Lossy Image Compression";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x2112;
    x->title="Lossy Image Compression Ratio";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x2114;
    x->title="Lossy Image Compression Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3000;
    x->title="Modality LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3002;
    x->title="LUT Descriptor";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3003;
    x->title="LUT Explanation";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3004;
    x->title="Modality LUT Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3006;
    x->title="LUT Data";
    x->vr="US or OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3010;
    x->title="VOI LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x3110;
    x->title="Softcopy VOI LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x4000;
    x->title="Image Presentation Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x5000;
    x->title="Bi-Plane Acquisition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6010;
    x->title="Representative Frame Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6020;
    x->title="Frame Numbers of Interest (FOI)";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6022;
    x->title="Frame of Interest Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6023;
    x->title="Frame of Interest Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6030;
    x->title="Mask Pointer(s)";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6040;
    x->title="R Wave Pointer";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6100;
    x->title="Mask Subtraction Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6101;
    x->title="Mask Operation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6102;
    x->title="Applicable Frame Range";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6110;
    x->title="Mask Frame Numbers";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6112;
    x->title="Contrast Frame Averaging";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6114;
    x->title="Mask Sub-pixel Shift";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6120;
    x->title="TID Offset";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x6190;
    x->title="Mask Operation Explanation";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7000;
    x->title="Equipment Administrator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7001;
    x->title="Number of Display Subsystems";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7002;
    x->title="Current Configuration ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7003;
    x->title="Display Subsystem ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7004;
    x->title="Display Subsystem Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7005;
    x->title="Display Subsystem Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7006;
    x->title="System Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7007;
    x->title="System Status Comment";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7008;
    x->title="Target Luminance Characteristics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7009;
    x->title="Luminance Characteristics ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700A;
    x->title="Display Subsystem Configuration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700B;
    x->title="Configuration ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700C;
    x->title="Configuration Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700D;
    x->title="Configuration Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700E;
    x->title="Referenced Target Luminance Characteristics ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x700F;
    x->title="QA Results Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7010;
    x->title="Display Subsystem QA Results Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7011;
    x->title="Configuration QA Results Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7012;
    x->title="Measurement Equipment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7013;
    x->title="Measurement Functions";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7014;
    x->title="Measurement Equipment Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7015;
    x->title="Visual Evaluation Result Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7016;
    x->title="Display Calibration Result Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7017;
    x->title="DDL Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7018;
    x->title="CIExy White Point";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7019;
    x->title="Display Function Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701A;
    x->title="Gamma Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701B;
    x->title="Number of Luminance Points";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701C;
    x->title="Luminance Response Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701D;
    x->title="Target Minimum Luminance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701E;
    x->title="Target Maximum Luminance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x701F;
    x->title="Luminance Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7020;
    x->title="Luminance Response Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7021;
    x->title="White Point Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7022;
    x->title="Display Device Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7023;
    x->title="Display Subsystem Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7024;
    x->title="Luminance Result Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7025;
    x->title="Ambient Light Value Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7026;
    x->title="Measured Characteristics";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7027;
    x->title="Luminance Uniformity Result Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7028;
    x->title="Visual Evaluation Test Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7029;
    x->title="Test Result";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x702A;
    x->title="Test Result Comment";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x702B;
    x->title="Test Image Validation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x702C;
    x->title="Test Pattern Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x702D;
    x->title="Measurement Pattern Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x702E;
    x->title="Visual Evaluation Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x7FE0;
    x->title="Pixel Data Provider URL";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9001;
    x->title="Data Point Rows";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9002;
    x->title="Data Point Columns";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9003;
    x->title="Signal Domain Columns";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9099;
    x->title="Largest Monochrome Pixel Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9108;
    x->title="Data Representation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9110;
    x->title="Pixel Measures Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9132;
    x->title="Frame VOI LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9145;
    x->title="Pixel Value Transformation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9235;
    x->title="Signal Domain Rows";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9411;
    x->title="Display Filter Percentage";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9415;
    x->title="Frame Pixel Shift Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9416;
    x->title="Subtraction Item ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9422;
    x->title="Pixel Intensity Relationship LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9443;
    x->title="Frame Pixel Data Properties Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9444;
    x->title="Geometrical Properties";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9445;
    x->title="Geometric Maximum Distortion";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9446;
    x->title="Image Processing Applied";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9454;
    x->title="Mask Selection Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9474;
    x->title="LUT Function";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9478;
    x->title="Mask Visibility Percentage";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9501;
    x->title="Pixel Shift Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9502;
    x->title="Region Pixel Shift Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9503;
    x->title="Vertices of the Region";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9505;
    x->title="Multi-frame Presentation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9506;
    x->title="Pixel Shift Frame Range";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9507;
    x->title="LUT Frame Range";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9520;
    x->title="Image to Equipment Mapping Matrix";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0028;
    x->tag[1]=0x9537;
    x->title="Equipment Coordinate System Identification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x000A;
    x->title="Study Status ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x000C;
    x->title="Study Priority ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x0012;
    x->title="Study ID Issuer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x0032;
    x->title="Study Verified Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x0033;
    x->title="Study Verified Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x0034;
    x->title="Study Read Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x0035;
    x->title="Study Read Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1000;
    x->title="Scheduled Study Start Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1001;
    x->title="Scheduled Study Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1010;
    x->title="Scheduled Study Stop Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1011;
    x->title="Scheduled Study Stop Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1020;
    x->title="Scheduled Study Location";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1021;
    x->title="Scheduled Study Location AE Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1030;
    x->title="Reason for Study";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1031;
    x->title="Requesting Physician Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1032;
    x->title="Requesting Physician";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1033;
    x->title="Requesting Service";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1034;
    x->title="Requesting Service Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1040;
    x->title="Study Arrival Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1041;
    x->title="Study Arrival Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1050;
    x->title="Study Completion Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1051;
    x->title="Study Completion Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1055;
    x->title="Study Component Status ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1060;
    x->title="Requested Procedure Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1064;
    x->title="Requested Procedure Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x1070;
    x->title="Requested Contrast Agent";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0032;
    x->tag[1]=0x4000;
    x->title="Study Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0004;
    x->title="Referenced Patient Alias Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0008;
    x->title="Visit Status ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0010;
    x->title="Admission ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0011;
    x->title="Issuer of Admission ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0014;
    x->title="Issuer of Admission ID Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0016;
    x->title="Route of Admissions";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x001A;
    x->title="Scheduled Admission Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x001B;
    x->title="Scheduled Admission Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x001C;
    x->title="Scheduled Discharge Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x001D;
    x->title="Scheduled Discharge Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x001E;
    x->title="Scheduled Patient Institution Residence";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0020;
    x->title="Admitting Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0021;
    x->title="Admitting Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0030;
    x->title="Discharge Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0032;
    x->title="Discharge Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0040;
    x->title="Discharge Diagnosis Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0044;
    x->title="Discharge Diagnosis Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0050;
    x->title="Special Needs";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0060;
    x->title="Service Episode ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0061;
    x->title="Issuer of Service Episode ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0062;
    x->title="Service Episode Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0064;
    x->title="Issuer of Service Episode ID Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0100;
    x->title="Pertinent Documents Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0101;
    x->title="Pertinent Resources Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0102;
    x->title="Resource Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0300;
    x->title="Current Patient Location";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0400;
    x->title="Patient's Institution Residence";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0500;
    x->title="Patient State";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x0502;
    x->title="Patient Clinical Trial Participation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0038;
    x->tag[1]=0x4000;
    x->title="Visit Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0004;
    x->title="Waveform Originality";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0005;
    x->title="Number of Waveform Channels";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0010;
    x->title="Number of Waveform Samples";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x001A;
    x->title="Sampling Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0020;
    x->title="Multiplex Group Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0200;
    x->title="Channel Definition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0202;
    x->title="Waveform Channel Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0203;
    x->title="Channel Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0205;
    x->title="Channel Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0208;
    x->title="Channel Source Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0209;
    x->title="Channel Source Modifiers Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x020A;
    x->title="Source Waveform Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x020C;
    x->title="Channel Derivation Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0210;
    x->title="Channel Sensitivity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0211;
    x->title="Channel Sensitivity Units Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0212;
    x->title="Channel Sensitivity Correction Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0213;
    x->title="Channel Baseline";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0214;
    x->title="Channel Time Skew";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0215;
    x->title="Channel Sample Skew";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0218;
    x->title="Channel Offset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x021A;
    x->title="Waveform Bits Stored";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0220;
    x->title="Filter Low Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0221;
    x->title="Filter High Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0222;
    x->title="Notch Filter Frequency";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0223;
    x->title="Notch Filter Bandwidth";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0230;
    x->title="Waveform Data Display Scale";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0231;
    x->title="Waveform Display Background CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0240;
    x->title="Waveform Presentation Group Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0241;
    x->title="Presentation Group Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0242;
    x->title="Channel Display Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0244;
    x->title="Channel Recommended Display CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0245;
    x->title="Channel Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0246;
    x->title="Display Shading Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0247;
    x->title="Fractional Channel Display Scale";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0248;
    x->title="Absolute Channel Display Scale";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0300;
    x->title="Multiplexed Audio Channels Description Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0301;
    x->title="Channel Identification Code";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x003A;
    x->tag[1]=0x0302;
    x->title="Channel Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0001;
    x->title="Scheduled Station AE Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0002;
    x->title="Scheduled Procedure Step Start Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0003;
    x->title="Scheduled Procedure Step Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0004;
    x->title="Scheduled Procedure Step End Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0005;
    x->title="Scheduled Procedure Step End Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0006;
    x->title="Scheduled Performing Physician's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0007;
    x->title="Scheduled Procedure Step Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0008;
    x->title="Scheduled Protocol Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0009;
    x->title="Scheduled Procedure Step ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x000A;
    x->title="Stage Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x000B;
    x->title="Scheduled Performing Physician Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0010;
    x->title="Scheduled Station Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0011;
    x->title="Scheduled Procedure Step Location";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0012;
    x->title="Pre-Medication";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0020;
    x->title="Scheduled Procedure Step Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0026;
    x->title="Order Placer Identifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0027;
    x->title="Order Filler Identifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0031;
    x->title="Local Namespace Entity ID";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0032;
    x->title="Universal Entity ID";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0033;
    x->title="Universal Entity ID Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0035;
    x->title="Identifier Type Code";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0036;
    x->title="Assigning Facility Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0039;
    x->title="Assigning Jurisdiction Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x003A;
    x->title="Assigning Agency or Department Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0100;
    x->title="Scheduled Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0220;
    x->title="Referenced Non-Image Composite SOP Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0241;
    x->title="Performed Station AE Title";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0242;
    x->title="Performed Station Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0243;
    x->title="Performed Location";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0244;
    x->title="Performed Procedure Step Start Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0245;
    x->title="Performed Procedure Step Start Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0250;
    x->title="Performed Procedure Step End Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0251;
    x->title="Performed Procedure Step End Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0252;
    x->title="Performed Procedure Step Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0253;
    x->title="Performed Procedure Step ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0254;
    x->title="Performed Procedure Step Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0255;
    x->title="Performed Procedure Type Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0260;
    x->title="Performed Protocol Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0261;
    x->title="Performed Protocol Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0270;
    x->title="Scheduled Step Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0275;
    x->title="Request Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0280;
    x->title="Comments on the Performed Procedure Step";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0281;
    x->title="Performed Procedure Step Discontinuation Reason Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0293;
    x->title="Quantity Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0294;
    x->title="Quantity";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0295;
    x->title="Measuring Units Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0296;
    x->title="Billing Item Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0300;
    x->title="Total Time of Fluoroscopy";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0301;
    x->title="Total Number of Exposures";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0302;
    x->title="Entrance Dose";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0303;
    x->title="Exposed Area";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0306;
    x->title="Distance Source to Entrance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0307;
    x->title="Distance Source to Support";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x030E;
    x->title="Exposure Dose Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0310;
    x->title="Comments on Radiation Dose";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0312;
    x->title="X-Ray Output";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0314;
    x->title="Half Value Layer";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0316;
    x->title="Organ Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0318;
    x->title="Organ Exposed";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0320;
    x->title="Billing Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0321;
    x->title="Film Consumption Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0324;
    x->title="Billing Supplies and Devices Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0330;
    x->title="Referenced Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0340;
    x->title="Performed Series Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0400;
    x->title="Comments on the Scheduled Procedure Step";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0440;
    x->title="Protocol Context Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0441;
    x->title="Content Item Modifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0500;
    x->title="Scheduled Specimen Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x050A;
    x->title="Specimen Accession Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0512;
    x->title="Container Identifier";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0513;
    x->title="Issuer of the Container Identifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0515;
    x->title="Alternate Container Identifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0518;
    x->title="Container Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x051A;
    x->title="Container Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0520;
    x->title="Container Component Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0550;
    x->title="Specimen Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0551;
    x->title="Specimen Identifier";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0552;
    x->title="Specimen Description Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0553;
    x->title="Specimen Description (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0554;
    x->title="Specimen UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0555;
    x->title="Acquisition Context Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0556;
    x->title="Acquisition Context Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x059A;
    x->title="Specimen Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0560;
    x->title="Specimen Description Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0562;
    x->title="Issuer of the Specimen Identifier Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0600;
    x->title="Specimen Short Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0602;
    x->title="Specimen Detailed Description";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0610;
    x->title="Specimen Preparation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0612;
    x->title="Specimen Preparation Step Content Item Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x0620;
    x->title="Specimen Localization Content Item Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x06FA;
    x->title="Slide Identifier";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x071A;
    x->title="Image Center Point Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x072A;
    x->title="X Offset in Slide Coordinate System";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x073A;
    x->title="Y Offset in Slide Coordinate System";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x074A;
    x->title="Z Offset in Slide Coordinate System";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x08D8;
    x->title="Pixel Spacing Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x08DA;
    x->title="Coordinate System Axis Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x08EA;
    x->title="Measurement Units Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x09F8;
    x->title="Vital Stain Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1001;
    x->title="Requested Procedure ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1002;
    x->title="Reason for the Requested Procedure";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1003;
    x->title="Requested Procedure Priority";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1004;
    x->title="Patient Transport Arrangements";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1005;
    x->title="Requested Procedure Location";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1006;
    x->title="Placer Order Number / Procedure";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1007;
    x->title="Filler Order Number / Procedure";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1008;
    x->title="Confidentiality Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1009;
    x->title="Reporting Priority";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x100A;
    x->title="Reason for Requested Procedure Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1010;
    x->title="Names of Intended Recipients of Results";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1011;
    x->title="Intended Recipients of Results Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1012;
    x->title="Reason For Performed Procedure Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1060;
    x->title="Requested Procedure Description (Trial)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1101;
    x->title="Person Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1102;
    x->title="Person's Address";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1103;
    x->title="Person's Telephone Numbers";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1104;
    x->title="Person's Telecom Information";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x1400;
    x->title="Requested Procedure Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2001;
    x->title="Reason for the Imaging Service Request";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2004;
    x->title="Issue Date of Imaging Service Request";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2005;
    x->title="Issue Time of Imaging Service Request";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2006;
    x->title="Placer Order Number / Imaging Service Request (Retired)";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2007;
    x->title="Filler Order Number / Imaging Service Request (Retired)";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2008;
    x->title="Order Entered By";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2009;
    x->title="Order Enterer's Location";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2010;
    x->title="Order Callback Phone Number";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2011;
    x->title="Order Callback Telecom Information";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2016;
    x->title="Placer Order Number / Imaging Service Request";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2017;
    x->title="Filler Order Number / Imaging Service Request";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x2400;
    x->title="Imaging Service Request Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x3001;
    x->title="Confidentiality Constraint on Patient Data Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4001;
    x->title="General Purpose Scheduled Procedure Step Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4002;
    x->title="General Purpose Performed Procedure Step Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4003;
    x->title="General Purpose Scheduled Procedure Step Priority";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4004;
    x->title="Scheduled Processing Applications Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4005;
    x->title="Scheduled Procedure Step Start DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4006;
    x->title="Multiple Copies Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4007;
    x->title="Performed Processing Applications Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4009;
    x->title="Human Performer Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4010;
    x->title="Scheduled Procedure Step Modification DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4011;
    x->title="Expected Completion DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4015;
    x->title="Resulting General Purpose Performed Procedure Steps Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4016;
    x->title="Referenced General Purpose Scheduled Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4018;
    x->title="Scheduled Workitem Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4019;
    x->title="Performed Workitem Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4020;
    x->title="Input Availability Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4021;
    x->title="Input Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4022;
    x->title="Relevant Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4023;
    x->title="Referenced General Purpose Scheduled Procedure Step Transaction UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4025;
    x->title="Scheduled Station Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4026;
    x->title="Scheduled Station Class Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4027;
    x->title="Scheduled Station Geographic Location Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4028;
    x->title="Performed Station Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4029;
    x->title="Performed Station Class Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4030;
    x->title="Performed Station Geographic Location Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4031;
    x->title="Requested Subsequent Workitem Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4032;
    x->title="Non-DICOM Output Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4033;
    x->title="Output Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4034;
    x->title="Scheduled Human Performers Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4035;
    x->title="Actual Human Performers Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4036;
    x->title="Human Performer's Organization";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4037;
    x->title="Human Performer's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4040;
    x->title="Raw Data Handling";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4041;
    x->title="Input Readiness State";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4050;
    x->title="Performed Procedure Step Start DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4051;
    x->title="Performed Procedure Step End DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4052;
    x->title="Procedure Step Cancellation DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4070;
    x->title="Output Destination Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4071;
    x->title="DICOM Storage Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4072;
    x->title="STOW-RS Storage Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4073;
    x->title="Storage URL";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x4074;
    x->title="XDS Storage Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x8302;
    x->title="Entrance Dose in mGy";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9092;
    x->title="Parametric Map Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9094;
    x->title="Referenced Image Real World Value Mapping Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9096;
    x->title="Real World Value Mapping Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9098;
    x->title="Pixel Value Mapping Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9210;
    x->title="LUT Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9211;
    x->title="Real World Value Last Value Mapped";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9212;
    x->title="Real World Value LUT Data";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9213;
    x->title="Double Float Real World Value Last Value Mapped";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9214;
    x->title="Double Float Real World Value First Value Mapped";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9216;
    x->title="Real World Value First Value Mapped";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9220;
    x->title="Quantity Definition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9224;
    x->title="Real World Value Intercept";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0x9225;
    x->title="Real World Value Slope";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA007;
    x->title="Findings Flag (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA010;
    x->title="Relationship Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA020;
    x->title="Findings Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA021;
    x->title="Findings Group UID (Trial)";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA022;
    x->title="Referenced Findings Group UID (Trial)";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA023;
    x->title="Findings Group Recording Date (Trial)";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA024;
    x->title="Findings Group Recording Time (Trial)";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA026;
    x->title="Findings Source Category Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA027;
    x->title="Verifying Organization";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA028;
    x->title="Documenting Organization Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA030;
    x->title="Verification DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA032;
    x->title="Observation DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA040;
    x->title="Value Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA043;
    x->title="Concept Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA047;
    x->title="Measurement Precision Description (Trial)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA050;
    x->title="Continuity Of Content";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA057;
    x->title="Urgency or Priority Alerts (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA060;
    x->title="Sequencing Indicator (Trial)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA066;
    x->title="Document Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA067;
    x->title="Document Author (Trial)";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA068;
    x->title="Document Author Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA070;
    x->title="Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA073;
    x->title="Verifying Observer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA074;
    x->title="Object Binary Identifier (Trial)";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA075;
    x->title="Verifying Observer Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA076;
    x->title="Documenting Observer Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA078;
    x->title="Author Observer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA07A;
    x->title="Participant Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA07C;
    x->title="Custodial Organization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA080;
    x->title="Participation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA082;
    x->title="Participation DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA084;
    x->title="Observer Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA085;
    x->title="Procedure Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA088;
    x->title="Verifying Observer Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA089;
    x->title="Object Directory Binary Identifier (Trial)";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA090;
    x->title="Equivalent CDA Document Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA0B0;
    x->title="Referenced Waveform Channels";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA110;
    x->title="Date of Document or Verbal Transaction (Trial)";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA112;
    x->title="Time of Document Creation or Verbal Transaction (Trial)";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA120;
    x->title="DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA121;
    x->title="Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA122;
    x->title="Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA123;
    x->title="Person Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA124;
    x->title="UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA125;
    x->title="Report Status ID (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA130;
    x->title="Temporal Range Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA132;
    x->title="Referenced Sample Positions";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA136;
    x->title="Referenced Frame Numbers";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA138;
    x->title="Referenced Time Offsets";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA13A;
    x->title="Referenced DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA160;
    x->title="Text Value";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA161;
    x->title="Floating Point Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA162;
    x->title="Rational Numerator Value";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA163;
    x->title="Rational Denominator Value";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA167;
    x->title="Observation Category Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA168;
    x->title="Concept Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA16A;
    x->title="Bibliographic Citation (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA170;
    x->title="Purpose of Reference Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA171;
    x->title="Observation UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA172;
    x->title="Referenced Observation UID (Trial)";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA173;
    x->title="Referenced Observation Class (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA174;
    x->title="Referenced Object Observation Class (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA180;
    x->title="Annotation Group Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA192;
    x->title="Observation Date (Trial)";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA193;
    x->title="Observation Time (Trial)";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA194;
    x->title="Measurement Automation (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA195;
    x->title="Modifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA224;
    x->title="Identification Description (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA290;
    x->title="Coordinates Set Geometric Type (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA296;
    x->title="Algorithm Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA297;
    x->title="Algorithm Description (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA29A;
    x->title="Pixel Coordinates Set (Trial)";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA300;
    x->title="Measured Value Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA301;
    x->title="Numeric Value Qualifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA307;
    x->title="Current Observer (Trial)";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA30A;
    x->title="Numeric Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA313;
    x->title="Referenced Accession Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA33A;
    x->title="Report Status Comment (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA340;
    x->title="Procedure Context Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA352;
    x->title="Verbal Source (Trial)";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA353;
    x->title="Address (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA354;
    x->title="Telephone Number (Trial)";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA358;
    x->title="Verbal Source Identifier Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA360;
    x->title="Predecessor Documents Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA370;
    x->title="Referenced Request Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA372;
    x->title="Performed Procedure Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA375;
    x->title="Current Requested Procedure Evidence Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA380;
    x->title="Report Detail Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA385;
    x->title="Pertinent Other Evidence Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA390;
    x->title="HL7 Structured Document Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA402;
    x->title="Observation Subject UID (Trial)";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA403;
    x->title="Observation Subject Class (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA404;
    x->title="Observation Subject Type Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA491;
    x->title="Completion Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA492;
    x->title="Completion Flag Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA493;
    x->title="Verification Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA494;
    x->title="Archive Requested";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA496;
    x->title="Preliminary Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA504;
    x->title="Content Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA525;
    x->title="Identical Documents Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA600;
    x->title="Observation Subject Context Flag (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA601;
    x->title="Observer Context Flag (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA603;
    x->title="Procedure Context Flag (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA730;
    x->title="Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA731;
    x->title="Relationship Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA732;
    x->title="Relationship Type Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA744;
    x->title="Language Code Sequence (Trial)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xA992;
    x->title="Uniform Resource Locator (Trial)";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xB020;
    x->title="Waveform Annotation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB00;
    x->title="Template Identifier";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB06;
    x->title="Template Version";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB07;
    x->title="Template Local Version";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB0B;
    x->title="Template Extension Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB0C;
    x->title="Template Extension Organization UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB0D;
    x->title="Template Extension Creator UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xDB73;
    x->title="Referenced Content Item Identifier";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE001;
    x->title="HL7 Instance Identifier";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE004;
    x->title="HL7 Document Effective Time";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE006;
    x->title="HL7 Document Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE008;
    x->title="Document Class Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE010;
    x->title="Retrieve URI";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE011;
    x->title="Retrieve Location UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE020;
    x->title="Type of Instances";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE021;
    x->title="DICOM Retrieval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE022;
    x->title="DICOM Media Retrieval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE023;
    x->title="WADO Retrieval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE024;
    x->title="XDS Retrieval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE025;
    x->title="WADO-RS Retrieval Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE030;
    x->title="Repository Unique ID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0040;
    x->tag[1]=0xE031;
    x->title="Home Community ID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0042;
    x->tag[1]=0x0010;
    x->title="Document Title";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0042;
    x->tag[1]=0x0011;
    x->title="Encapsulated Document";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0042;
    x->tag[1]=0x0012;
    x->title="MIME Type of Encapsulated Document";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0042;
    x->tag[1]=0x0013;
    x->title="Source Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0042;
    x->tag[1]=0x0014;
    x->title="List of MIME Types";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0001;
    x->title="Product Package Identifier";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0002;
    x->title="Substance Administration Approval";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0003;
    x->title="Approval Status Further Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0004;
    x->title="Approval Status DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0007;
    x->title="Product Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0008;
    x->title="Product Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0009;
    x->title="Product Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x000A;
    x->title="Product Lot Identifier";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x000B;
    x->title="Product Expiration DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0010;
    x->title="Substance Administration DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0011;
    x->title="Substance Administration Notes";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0012;
    x->title="Substance Administration Device ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0013;
    x->title="Product Parameter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0044;
    x->tag[1]=0x0019;
    x->title="Substance Administration Parameter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0012;
    x->title="Lens Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0014;
    x->title="Right Lens Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0015;
    x->title="Left Lens Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0016;
    x->title="Unspecified Laterality Lens Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0018;
    x->title="Cylinder Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0028;
    x->title="Prism Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0030;
    x->title="Horizontal Prism Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0032;
    x->title="Horizontal Prism Base";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0034;
    x->title="Vertical Prism Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0036;
    x->title="Vertical Prism Base";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0038;
    x->title="Lens Segment Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0040;
    x->title="Optical Transmittance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0042;
    x->title="Channel Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0044;
    x->title="Pupil Size";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0046;
    x->title="Corneal Size";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0050;
    x->title="Autorefraction Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0052;
    x->title="Autorefraction Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0060;
    x->title="Distance Pupillary Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0062;
    x->title="Near Pupillary Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0063;
    x->title="Intermediate Pupillary Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0064;
    x->title="Other Pupillary Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0070;
    x->title="Keratometry Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0071;
    x->title="Keratometry Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0074;
    x->title="Steep Keratometric Axis Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0075;
    x->title="Radius of Curvature";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0076;
    x->title="Keratometric Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0077;
    x->title="Keratometric Axis";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0080;
    x->title="Flat Keratometric Axis Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0092;
    x->title="Background Color";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0094;
    x->title="Optotype";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0095;
    x->title="Optotype Presentation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0097;
    x->title="Subjective Refraction Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0098;
    x->title="Subjective Refraction Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0100;
    x->title="Add Near Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0101;
    x->title="Add Intermediate Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0102;
    x->title="Add Other Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0104;
    x->title="Add Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0106;
    x->title="Viewing Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0121;
    x->title="Visual Acuity Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0122;
    x->title="Visual Acuity Right Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0123;
    x->title="Visual Acuity Left Eye Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0124;
    x->title="Visual Acuity Both Eyes Open Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0125;
    x->title="Viewing Distance Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0135;
    x->title="Visual Acuity Modifiers";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0137;
    x->title="Decimal Visual Acuity";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0139;
    x->title="Optotype Detailed Definition";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0145;
    x->title="Referenced Refractive Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0146;
    x->title="Sphere Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0147;
    x->title="Cylinder Power";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0201;
    x->title="Corneal Topography Surface";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0202;
    x->title="Corneal Vertex Location";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0203;
    x->title="Pupil Centroid X-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0204;
    x->title="Pupil Centroid Y-Coordinate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0205;
    x->title="Equivalent Pupil Radius";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0207;
    x->title="Corneal Topography Map Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0208;
    x->title="Vertices of the Outline of Pupil";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0210;
    x->title="Corneal Topography Mapping Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0211;
    x->title="Maximum Corneal Curvature Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0212;
    x->title="Maximum Corneal Curvature";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0213;
    x->title="Maximum Corneal Curvature Location";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0215;
    x->title="Minimum Keratometric Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0218;
    x->title="Simulated Keratometric Cylinder Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0220;
    x->title="Average Corneal Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0224;
    x->title="Corneal I-S Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0227;
    x->title="Analyzed Area";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0230;
    x->title="Surface Regularity Index";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0232;
    x->title="Surface Asymmetry Index";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0234;
    x->title="Corneal Eccentricity Index";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0236;
    x->title="Keratoconus Prediction Index";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0238;
    x->title="Decimal Potential Visual Acuity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0242;
    x->title="Corneal Topography Map Quality Evaluation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0244;
    x->title="Source Image Corneal Processed Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0247;
    x->title="Corneal Point Location";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0248;
    x->title="Corneal Point Estimated";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0249;
    x->title="Axial Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0250;
    x->title="Tangential Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0251;
    x->title="Refractive Power";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0252;
    x->title="Relative Elevation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0046;
    x->tag[1]=0x0253;
    x->title="Corneal Wavefront";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0001;
    x->title="Imaged Volume Width";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0002;
    x->title="Imaged Volume Height";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0003;
    x->title="Imaged Volume Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0006;
    x->title="Total Pixel Matrix Columns";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0007;
    x->title="Total Pixel Matrix Rows";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0008;
    x->title="Total Pixel Matrix Origin Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0010;
    x->title="Specimen Label in Image";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0011;
    x->title="Focus Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0012;
    x->title="Extended Depth of Field";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0013;
    x->title="Number of Focal Planes";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0014;
    x->title="Distance Between Focal Planes";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0015;
    x->title="Recommended Absent Pixel CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0100;
    x->title="Illuminator Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0102;
    x->title="Image Orientation (Slide)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0105;
    x->title="Optical Path Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0106;
    x->title="Optical Path Identifier";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0107;
    x->title="Optical Path Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0108;
    x->title="Illumination Color Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0110;
    x->title="Specimen Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0111;
    x->title="Condenser Lens Power";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0112;
    x->title="Objective Lens Power";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0113;
    x->title="Objective Lens Numerical Aperture";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0120;
    x->title="Palette Color Lookup Table Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0200;
    x->title="Referenced Image Navigation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0201;
    x->title="Top Left Hand Corner of Localizer Area";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0202;
    x->title="Bottom Right Hand Corner of Localizer Area";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0207;
    x->title="Optical Path Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x021A;
    x->title="Plane Position (Slide) Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x021E;
    x->title="Column Position In Total Image Pixel Matrix";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x021F;
    x->title="Row Position In Total Image Pixel Matrix";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0048;
    x->tag[1]=0x0301;
    x->title="Pixel Origin Interpretation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0004;
    x->title="Calibration Image";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0010;
    x->title="Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0012;
    x->title="Container Component Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0013;
    x->title="Container Component Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0014;
    x->title="Device Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0015;
    x->title="Container Component Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0016;
    x->title="Device Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0017;
    x->title="Device Diameter Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0018;
    x->title="Device Volume";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0019;
    x->title="Inter-Marker Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x001A;
    x->title="Container Component Material";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x001B;
    x->title="Container Component ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x001C;
    x->title="Container Component Length";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x001D;
    x->title="Container Component Diameter";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x001E;
    x->title="Container Component Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0050;
    x->tag[1]=0x0020;
    x->title="Device Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0001;
    x->title="Contrast/Bolus Ingredient Percent by Volume";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0002;
    x->title="OCT Focal Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0003;
    x->title="Beam Spot Size";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0004;
    x->title="Effective Refractive Index";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0006;
    x->title="OCT Acquisition Domain";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0007;
    x->title="OCT Optical Center Wavelength";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0008;
    x->title="Axial Resolution";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0009;
    x->title="Ranging Depth";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0011;
    x->title="A-line Rate";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0012;
    x->title="A-lines Per Frame";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0013;
    x->title="Catheter Rotational Rate";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0014;
    x->title="A-line Pixel Spacing";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0016;
    x->title="Mode of Percutaneous Access Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0025;
    x->title="Intravascular OCT Frame Type Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0026;
    x->title="OCT Z Offset Applied";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0027;
    x->title="Intravascular Frame Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0028;
    x->title="Intravascular Longitudinal Distance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0029;
    x->title="Intravascular OCT Frame Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0030;
    x->title="OCT Z Offset Correction";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0031;
    x->title="Catheter Direction of Rotation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0033;
    x->title="Seam Line Location";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0034;
    x->title="First A-line Location";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0036;
    x->title="Seam Line Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0038;
    x->title="Number of Padded A-lines";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x0039;
    x->title="Interpolation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0052;
    x->tag[1]=0x003A;
    x->title="Refractive Index Applied";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0010;
    x->title="Energy Window Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0011;
    x->title="Number of Energy Windows";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0012;
    x->title="Energy Window Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0013;
    x->title="Energy Window Range Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0014;
    x->title="Energy Window Lower Limit";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0015;
    x->title="Energy Window Upper Limit";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0016;
    x->title="Radiopharmaceutical Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0017;
    x->title="Residual Syringe Counts";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0018;
    x->title="Energy Window Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0020;
    x->title="Detector Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0021;
    x->title="Number of Detectors";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0022;
    x->title="Detector Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0030;
    x->title="Phase Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0031;
    x->title="Number of Phases";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0032;
    x->title="Phase Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0033;
    x->title="Number of Frames in Phase";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0036;
    x->title="Phase Delay";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0038;
    x->title="Pause Between Frames";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0039;
    x->title="Phase Description";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0050;
    x->title="Rotation Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0051;
    x->title="Number of Rotations";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0052;
    x->title="Rotation Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0053;
    x->title="Number of Frames in Rotation";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0060;
    x->title="R-R Interval Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0061;
    x->title="Number of R-R Intervals";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0062;
    x->title="Gated Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0063;
    x->title="Data Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0070;
    x->title="Time Slot Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0071;
    x->title="Number of Time Slots";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0072;
    x->title="Time Slot Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0073;
    x->title="Time Slot Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0080;
    x->title="Slice Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0081;
    x->title="Number of Slices";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0090;
    x->title="Angular View Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0100;
    x->title="Time Slice Vector";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0101;
    x->title="Number of Time Slices";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0200;
    x->title="Start Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0202;
    x->title="Type of Detector Motion";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0210;
    x->title="Trigger Vector";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0211;
    x->title="Number of Triggers in Phase";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0220;
    x->title="View Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0222;
    x->title="View Modifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0300;
    x->title="Radionuclide Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0302;
    x->title="Administration Route Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0304;
    x->title="Radiopharmaceutical Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0306;
    x->title="Calibration Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0308;
    x->title="Energy Window Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0400;
    x->title="Image ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0410;
    x->title="Patient Orientation Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0412;
    x->title="Patient Orientation Modifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0414;
    x->title="Patient Gantry Relationship Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0500;
    x->title="Slice Progression Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x0501;
    x->title="Scan Progression Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1000;
    x->title="Series Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1001;
    x->title="Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1002;
    x->title="Counts Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1004;
    x->title="Reprojection Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1006;
    x->title="SUV Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1100;
    x->title="Randoms Correction Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1101;
    x->title="Attenuation Correction Method";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1102;
    x->title="Decay Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1103;
    x->title="Reconstruction Method";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1104;
    x->title="Detector Lines of Response Used";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1105;
    x->title="Scatter Correction Method";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1200;
    x->title="Axial Acceptance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1201;
    x->title="Axial Mash";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1202;
    x->title="Transverse Mash";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1203;
    x->title="Detector Element Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1210;
    x->title="Coincidence Window Width";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1220;
    x->title="Secondary Counts Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1300;
    x->title="Frame Reference Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1310;
    x->title="Primary (Prompts) Counts Accumulated";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1311;
    x->title="Secondary Counts Accumulated";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1320;
    x->title="Slice Sensitivity Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1321;
    x->title="Decay Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1322;
    x->title="Dose Calibration Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1323;
    x->title="Scatter Fraction Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1324;
    x->title="Dead Time Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1330;
    x->title="Image Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1400;
    x->title="Counts Included";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0054;
    x->tag[1]=0x1401;
    x->title="Dead Time Correction Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3000;
    x->title="Histogram Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3002;
    x->title="Histogram Number of Bins";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3004;
    x->title="Histogram First Bin Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3006;
    x->title="Histogram Last Bin Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3008;
    x->title="Histogram Bin Width";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3010;
    x->title="Histogram Explanation";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0060;
    x->tag[1]=0x3020;
    x->title="Histogram Data";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0001;
    x->title="Segmentation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0002;
    x->title="Segment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0003;
    x->title="Segmented Property Category Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0004;
    x->title="Segment Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0005;
    x->title="Segment Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0006;
    x->title="Segment Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0008;
    x->title="Segment Algorithm Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0009;
    x->title="Segment Algorithm Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000A;
    x->title="Segment Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000B;
    x->title="Referenced Segment Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000C;
    x->title="Recommended Display Grayscale Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000D;
    x->title="Recommended Display CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000E;
    x->title="Maximum Fractional Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x000F;
    x->title="Segmented Property Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0010;
    x->title="Segmentation Fractional Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0011;
    x->title="Segmented Property Type Modifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0012;
    x->title="Used Segments Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0020;
    x->title="Tracking ID";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0062;
    x->tag[1]=0x0021;
    x->title="Tracking UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0002;
    x->title="Deformable Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0003;
    x->title="Source Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0005;
    x->title="Deformable Registration Grid Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0007;
    x->title="Grid Dimensions";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0008;
    x->title="Grid Resolution";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0009;
    x->title="Vector Grid Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x000F;
    x->title="Pre Deformation Matrix Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0064;
    x->tag[1]=0x0010;
    x->title="Post Deformation Matrix Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0001;
    x->title="Number of Surfaces";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0002;
    x->title="Surface Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0003;
    x->title="Surface Number";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0004;
    x->title="Surface Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0009;
    x->title="Surface Processing";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x000A;
    x->title="Surface Processing Ratio";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x000B;
    x->title="Surface Processing Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x000C;
    x->title="Recommended Presentation Opacity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x000D;
    x->title="Recommended Presentation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x000E;
    x->title="Finite Volume";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0010;
    x->title="Manifold";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0011;
    x->title="Surface Points Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0012;
    x->title="Surface Points Normals Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0013;
    x->title="Surface Mesh Primitives Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0015;
    x->title="Number of Surface Points";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0016;
    x->title="Point Coordinates Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0017;
    x->title="Point Position Accuracy";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0018;
    x->title="Mean Point Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0019;
    x->title="Maximum Point Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x001A;
    x->title="Points Bounding Box Coordinates";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x001B;
    x->title="Axis of Rotation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x001C;
    x->title="Center of Rotation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x001E;
    x->title="Number of Vectors";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x001F;
    x->title="Vector Dimensionality";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0020;
    x->title="Vector Accuracy";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0021;
    x->title="Vector Coordinate Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0023;
    x->title="Triangle Point Index List";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0024;
    x->title="Edge Point Index List";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0025;
    x->title="Vertex Point Index List";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0026;
    x->title="Triangle Strip Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0027;
    x->title="Triangle Fan Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0028;
    x->title="Line Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0029;
    x->title="Primitive Point Index List";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002A;
    x->title="Surface Count";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002B;
    x->title="Referenced Surface Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002C;
    x->title="Referenced Surface Number";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002D;
    x->title="Segment Surface Generation Algorithm Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002E;
    x->title="Segment Surface Source Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x002F;
    x->title="Algorithm Family Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0030;
    x->title="Algorithm Name Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0031;
    x->title="Algorithm Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0032;
    x->title="Algorithm Parameters";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0034;
    x->title="Facet Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0035;
    x->title="Surface Processing Algorithm Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0036;
    x->title="Algorithm Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0037;
    x->title="Recommended Point Radius";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0038;
    x->title="Recommended Line Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0040;
    x->title="Long Primitive Point Index List";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0041;
    x->title="Long Triangle Point Index List";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0042;
    x->title="Long Edge Point Index List";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0043;
    x->title="Long Vertex Point Index List";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0101;
    x->title="Track Set Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0102;
    x->title="Track Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0103;
    x->title="Recommended Display CIELab Value List";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0104;
    x->title="Tracking Algorithm Identification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0105;
    x->title="Track Set Number";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0106;
    x->title="Track Set Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0107;
    x->title="Track Set Description";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0108;
    x->title="Track Set Anatomical Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0121;
    x->title="Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0124;
    x->title="Track Set Statistics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0125;
    x->title="Floating Point Values";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0129;
    x->title="Track Point Index List";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0130;
    x->title="Track Statistics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0132;
    x->title="Measurement Values Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0133;
    x->title="Diffusion Acquisition Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0066;
    x->tag[1]=0x0134;
    x->title="Diffusion Model Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6210;
    x->title="Implant Size";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6221;
    x->title="Implant Template Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6222;
    x->title="Replaced Implant Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6223;
    x->title="Implant Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6224;
    x->title="Derivation Implant Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6225;
    x->title="Original Implant Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6226;
    x->title="Effective DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6230;
    x->title="Implant Target Anatomy Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6260;
    x->title="Information From Manufacturer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6265;
    x->title="Notification From Manufacturer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6270;
    x->title="Information Issue DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6280;
    x->title="Information Summary";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62A0;
    x->title="Implant Regulatory Disapproval Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62A5;
    x->title="Overall Template Spatial Tolerance";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62C0;
    x->title="HPGL Document Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62D0;
    x->title="HPGL Document ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62D5;
    x->title="HPGL Document Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62E0;
    x->title="View Orientation Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62F0;
    x->title="View Orientation Modifier";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x62F2;
    x->title="HPGL Document Scaling";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6300;
    x->title="HPGL Document";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6310;
    x->title="HPGL Contour Pen Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6320;
    x->title="HPGL Pen Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6330;
    x->title="HPGL Pen Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6340;
    x->title="HPGL Pen Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6345;
    x->title="HPGL Pen Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6346;
    x->title="Recommended Rotation Point";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6347;
    x->title="Bounding Rectangle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6350;
    x->title="Implant Template 3D Model Surface Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6360;
    x->title="Surface Model Description Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6380;
    x->title="Surface Model Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6390;
    x->title="Surface Model Scaling Factor";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63A0;
    x->title="Materials Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63A4;
    x->title="Coating Materials Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63A8;
    x->title="Implant Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63AC;
    x->title="Fixation Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63B0;
    x->title="Mating Feature Sets Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63C0;
    x->title="Mating Feature Set ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63D0;
    x->title="Mating Feature Set Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63E0;
    x->title="Mating Feature Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x63F0;
    x->title="Mating Feature ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6400;
    x->title="Mating Feature Degree of Freedom Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6410;
    x->title="Degree of Freedom ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6420;
    x->title="Degree of Freedom Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6430;
    x->title="2D Mating Feature Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6440;
    x->title="Referenced HPGL Document ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6450;
    x->title="2D Mating Point";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6460;
    x->title="2D Mating Axes";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6470;
    x->title="2D Degree of Freedom Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6490;
    x->title="3D Degree of Freedom Axis";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x64A0;
    x->title="Range of Freedom";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x64C0;
    x->title="3D Mating Point";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x64D0;
    x->title="3D Mating Axes";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x64F0;
    x->title="2D Degree of Freedom Axis";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6500;
    x->title="Planning Landmark Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6510;
    x->title="Planning Landmark Line Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6520;
    x->title="Planning Landmark Plane Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6530;
    x->title="Planning Landmark ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6540;
    x->title="Planning Landmark Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6545;
    x->title="Planning Landmark Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6550;
    x->title="2D Point Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6560;
    x->title="2D Point Coordinates";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6590;
    x->title="3D Point Coordinates";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x65A0;
    x->title="2D Line Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x65B0;
    x->title="2D Line Coordinates";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x65D0;
    x->title="3D Line Coordinates";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x65E0;
    x->title="2D Plane Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x65F0;
    x->title="2D Plane Intersection";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6610;
    x->title="3D Plane Origin";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0068;
    x->tag[1]=0x6620;
    x->title="3D Plane Normal";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0001;
    x->title="Graphic Annotation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0002;
    x->title="Graphic Layer";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0003;
    x->title="Bounding Box Annotation Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0004;
    x->title="Anchor Point Annotation Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0005;
    x->title="Graphic Annotation Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0006;
    x->title="Unformatted Text Value";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0008;
    x->title="Text Object Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0009;
    x->title="Graphic Object Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0010;
    x->title="Bounding Box Top Left Hand Corner";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0011;
    x->title="Bounding Box Bottom Right Hand Corner";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0012;
    x->title="Bounding Box Text Horizontal Justification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0014;
    x->title="Anchor Point";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0015;
    x->title="Anchor Point Visibility";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0020;
    x->title="Graphic Dimensions";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0021;
    x->title="Number of Graphic Points";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0022;
    x->title="Graphic Data";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0023;
    x->title="Graphic Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0024;
    x->title="Graphic Filled";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0040;
    x->title="Image Rotation (Retired)";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0041;
    x->title="Image Horizontal Flip";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0042;
    x->title="Image Rotation";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0050;
    x->title="Displayed Area Top Left Hand Corner (Trial)";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0051;
    x->title="Displayed Area Bottom Right Hand Corner (Trial)";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0052;
    x->title="Displayed Area Top Left Hand Corner";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0053;
    x->title="Displayed Area Bottom Right Hand Corner";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x005A;
    x->title="Displayed Area Selection Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0060;
    x->title="Graphic Layer Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0062;
    x->title="Graphic Layer Order";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0066;
    x->title="Graphic Layer Recommended Display Grayscale Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0067;
    x->title="Graphic Layer Recommended Display RGB Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0068;
    x->title="Graphic Layer Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0080;
    x->title="Content Label";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0081;
    x->title="Content Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0082;
    x->title="Presentation Creation Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0083;
    x->title="Presentation Creation Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0084;
    x->title="Content Creator's Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0086;
    x->title="Content Creator's Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0087;
    x->title="Alternate Content Description Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0100;
    x->title="Presentation Size Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0101;
    x->title="Presentation Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0102;
    x->title="Presentation Pixel Aspect Ratio";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0103;
    x->title="Presentation Pixel Magnification Ratio";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0207;
    x->title="Graphic Group Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0208;
    x->title="Graphic Group Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0209;
    x->title="Compound Graphic Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0226;
    x->title="Compound Graphic Instance ID";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0227;
    x->title="Font Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0228;
    x->title="Font Name Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0229;
    x->title="CSS Font Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0230;
    x->title="Rotation Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0231;
    x->title="Text Style Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0232;
    x->title="Line Style Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0233;
    x->title="Fill Style Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0234;
    x->title="Graphic Group Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0241;
    x->title="Text Color CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0242;
    x->title="Horizontal Alignment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0243;
    x->title="Vertical Alignment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0244;
    x->title="Shadow Style";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0245;
    x->title="Shadow Offset X";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0246;
    x->title="Shadow Offset Y";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0247;
    x->title="Shadow Color CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0248;
    x->title="Underlined";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0249;
    x->title="Bold";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0250;
    x->title="Italic";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0251;
    x->title="Pattern On Color CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0252;
    x->title="Pattern Off Color CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0253;
    x->title="Line Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0254;
    x->title="Line Dashing Style";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0255;
    x->title="Line Pattern";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0256;
    x->title="Fill Pattern";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0257;
    x->title="Fill Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0258;
    x->title="Shadow Opacity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0261;
    x->title="Gap Length";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0262;
    x->title="Diameter of Visibility";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0273;
    x->title="Rotation Point";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0274;
    x->title="Tick Alignment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0278;
    x->title="Show Tick Label";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0279;
    x->title="Tick Label Alignment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0282;
    x->title="Compound Graphic Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0284;
    x->title="Pattern On Opacity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0285;
    x->title="Pattern Off Opacity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0287;
    x->title="Major Ticks Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0288;
    x->title="Tick Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0289;
    x->title="Tick Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0294;
    x->title="Compound Graphic Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0295;
    x->title="Graphic Group ID";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0306;
    x->title="Shape Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0308;
    x->title="Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0309;
    x->title="Matrix Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x030A;
    x->title="Matrix Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x030B;
    x->title="Frame of Reference to Displayed Coordinate System Transformation Matrix";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x030C;
    x->title="Frame of Reference Transformation Matrix Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x030D;
    x->title="Registration Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x030F;
    x->title="Fiducial Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0310;
    x->title="Fiducial Identifier";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0311;
    x->title="Fiducial Identifier Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0312;
    x->title="Contour Uncertainty Radius";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0314;
    x->title="Used Fiducials Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0318;
    x->title="Graphic Coordinates Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x031A;
    x->title="Fiducial UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x031C;
    x->title="Fiducial Set Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x031E;
    x->title="Fiducial Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0401;
    x->title="Graphic Layer Recommended Display CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0402;
    x->title="Blending Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0403;
    x->title="Relative Opacity";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0404;
    x->title="Referenced Spatial Registration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x0405;
    x->title="Blending Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1101;
    x->title="Presentation Display Collection UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1102;
    x->title="Presentation Sequence Collection UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1103;
    x->title="Presentation Sequence Position Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1104;
    x->title="Rendered Image Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1201;
    x->title="Volumetric Presentation State Input Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1202;
    x->title="Presentation Input Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1203;
    x->title="Input Sequence Position Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1204;
    x->title="Crop";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1205;
    x->title="Cropping Specification Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1206;
    x->title="Compositing Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1207;
    x->title="Volumetric Presentation Input Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1208;
    x->title="Image Volume Geometry";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1301;
    x->title="Volume Cropping Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1302;
    x->title="Volume Cropping Method";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1303;
    x->title="Bounding Box Crop";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1304;
    x->title="Oblique Cropping Plane Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1305;
    x->title="Plane";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1306;
    x->title="Plane Normal";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1309;
    x->title="Cropping Specification Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1501;
    x->title="Multi-Planar Reconstruction Style";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1502;
    x->title="MPR Thickness Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1503;
    x->title="MPR Slab Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1505;
    x->title="MPR Top Left Hand Corner";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1507;
    x->title="MPR View Width Direction";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1508;
    x->title="MPR View Width";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x150C;
    x->title="Number of Volumetric Curve Points";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x150D;
    x->title="Volumetric Curve Points";
    x->vr="OD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1511;
    x->title="MPR View Height Direction";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1512;
    x->title="MPR View Height";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1801;
    x->title="Presentation State Classification Component Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1802;
    x->title="Component Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1803;
    x->title="Component Input Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1804;
    x->title="Volumetric Presentation Input Index";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1805;
    x->title="Presentation State Compositor Component Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1806;
    x->title="Weighting Transfer Function Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1807;
    x->title="Weighting Lookup Table Descriptor";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1808;
    x->title="Weighting Lookup Table Data";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1901;
    x->title="Volumetric Annotation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1903;
    x->title="Referenced Structured Context Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1904;
    x->title="Referenced Content Item";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1905;
    x->title="Volumetric Presentation Input Annotation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1907;
    x->title="Annotation Clipping";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1A01;
    x->title="Presentation Animation Style";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1A03;
    x->title="Recommended Animation Rate";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1A04;
    x->title="Animation Curve Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0070;
    x->tag[1]=0x1A05;
    x->title="Animation Step Size";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0002;
    x->title="Hanging Protocol Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0004;
    x->title="Hanging Protocol Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0006;
    x->title="Hanging Protocol Level";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0008;
    x->title="Hanging Protocol Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x000A;
    x->title="Hanging Protocol Creation DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x000C;
    x->title="Hanging Protocol Definition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x000E;
    x->title="Hanging Protocol User Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0010;
    x->title="Hanging Protocol User Group Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0012;
    x->title="Source Hanging Protocol Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0014;
    x->title="Number of Priors Referenced";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0020;
    x->title="Image Sets Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0022;
    x->title="Image Set Selector Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0024;
    x->title="Image Set Selector Usage Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0026;
    x->title="Selector Attribute";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0028;
    x->title="Selector Value Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0030;
    x->title="Time Based Image Sets Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0032;
    x->title="Image Set Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0034;
    x->title="Image Set Selector Category";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0038;
    x->title="Relative Time";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x003A;
    x->title="Relative Time Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x003C;
    x->title="Abstract Prior Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x003E;
    x->title="Abstract Prior Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0040;
    x->title="Image Set Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0050;
    x->title="Selector Attribute VR";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0052;
    x->title="Selector Sequence Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0054;
    x->title="Selector Sequence Pointer Private Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0056;
    x->title="Selector Attribute Private Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x005E;
    x->title="Selector AE Value";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x005F;
    x->title="Selector AS Value";
    x->vr="AS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0060;
    x->title="Selector AT Value";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0061;
    x->title="Selector DA Value";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0062;
    x->title="Selector CS Value";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0063;
    x->title="Selector DT Value";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0064;
    x->title="Selector IS Value";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0065;
    x->title="Selector OB Value";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0066;
    x->title="Selector LO Value";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0067;
    x->title="Selector OF Value";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0068;
    x->title="Selector LT Value";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0069;
    x->title="Selector OW Value";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006A;
    x->title="Selector PN Value";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006B;
    x->title="Selector TM Value";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006C;
    x->title="Selector SH Value";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006D;
    x->title="Selector UN Value";
    x->vr="UN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006E;
    x->title="Selector ST Value";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x006F;
    x->title="Selector UC Value";
    x->vr="UC";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0070;
    x->title="Selector UT Value";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0071;
    x->title="Selector UR Value";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0072;
    x->title="Selector DS Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0073;
    x->title="Selector OD Value";
    x->vr="OD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0074;
    x->title="Selector FD Value";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0075;
    x->title="Selector OL Value";
    x->vr="OL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0076;
    x->title="Selector FL Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0078;
    x->title="Selector UL Value";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x007A;
    x->title="Selector US Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x007C;
    x->title="Selector SL Value";
    x->vr="SL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x007E;
    x->title="Selector SS Value";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x007F;
    x->title="Selector UI Value";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0080;
    x->title="Selector Code Sequence Value";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0100;
    x->title="Number of Screens";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0102;
    x->title="Nominal Screen Definition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0104;
    x->title="Number of Vertical Pixels";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0106;
    x->title="Number of Horizontal Pixels";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0108;
    x->title="Display Environment Spatial Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x010A;
    x->title="Screen Minimum Grayscale Bit Depth";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x010C;
    x->title="Screen Minimum Color Bit Depth";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x010E;
    x->title="Application Maximum Repaint Time";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0200;
    x->title="Display Sets Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0202;
    x->title="Display Set Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0203;
    x->title="Display Set Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0204;
    x->title="Display Set Presentation Group";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0206;
    x->title="Display Set Presentation Group Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0208;
    x->title="Partial Data Display Handling";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0210;
    x->title="Synchronized Scrolling Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0212;
    x->title="Display Set Scrolling Group";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0214;
    x->title="Navigation Indicator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0216;
    x->title="Navigation Display Set";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0218;
    x->title="Reference Display Sets";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0300;
    x->title="Image Boxes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0302;
    x->title="Image Box Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0304;
    x->title="Image Box Layout Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0306;
    x->title="Image Box Tile Horizontal Dimension";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0308;
    x->title="Image Box Tile Vertical Dimension";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0310;
    x->title="Image Box Scroll Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0312;
    x->title="Image Box Small Scroll Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0314;
    x->title="Image Box Small Scroll Amount";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0316;
    x->title="Image Box Large Scroll Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0318;
    x->title="Image Box Large Scroll Amount";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0320;
    x->title="Image Box Overlap Priority";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0330;
    x->title="Cine Relative to Real-Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0400;
    x->title="Filter Operations Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0402;
    x->title="Filter-by Category";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0404;
    x->title="Filter-by Attribute Presence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0406;
    x->title="Filter-by Operator";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0420;
    x->title="Structured Display Background CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0421;
    x->title="Empty Image Box CIELab Value";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0422;
    x->title="Structured Display Image Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0424;
    x->title="Structured Display Text Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0427;
    x->title="Referenced First Frame Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0430;
    x->title="Image Box Synchronization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0432;
    x->title="Synchronized Image Box List";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0434;
    x->title="Type of Synchronization";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0500;
    x->title="Blending Operation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0510;
    x->title="Reformatting Operation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0512;
    x->title="Reformatting Thickness";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0514;
    x->title="Reformatting Interval";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0516;
    x->title="Reformatting Operation Initial View Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0520;
    x->title="3D Rendering Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0600;
    x->title="Sorting Operations Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0602;
    x->title="Sort-by Category";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0604;
    x->title="Sorting Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0700;
    x->title="Display Set Patient Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0702;
    x->title="VOI Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0704;
    x->title="Pseudo-Color Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0705;
    x->title="Pseudo-Color Palette Instance Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0706;
    x->title="Show Grayscale Inverted";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0710;
    x->title="Show Image True Size Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0712;
    x->title="Show Graphic Annotation Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0714;
    x->title="Show Patient Demographics Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0716;
    x->title="Show Acquisition Techniques Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0717;
    x->title="Display Set Horizontal Justification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0072;
    x->tag[1]=0x0718;
    x->title="Display Set Vertical Justification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x0120;
    x->title="Continuation Start Meterset";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x0121;
    x->title="Continuation End Meterset";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1000;
    x->title="Procedure Step State";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1002;
    x->title="Procedure Step Progress Information Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1004;
    x->title="Procedure Step Progress";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1006;
    x->title="Procedure Step Progress Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1008;
    x->title="Procedure Step Communications URI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x100A;
    x->title="Contact URI";
    x->vr="UR";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x100C;
    x->title="Contact Display Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x100E;
    x->title="Procedure Step Discontinuation Reason Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1020;
    x->title="Beam Task Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1022;
    x->title="Beam Task Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1024;
    x->title="Beam Order Index (Trial)";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1025;
    x->title="Autosequence Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1026;
    x->title="Table Top Vertical Adjusted Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1027;
    x->title="Table Top Longitudinal Adjusted Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1028;
    x->title="Table Top Lateral Adjusted Position";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x102A;
    x->title="Patient Support Adjusted Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x102B;
    x->title="Table Top Eccentric Adjusted Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x102C;
    x->title="Table Top Pitch Adjusted Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x102D;
    x->title="Table Top Roll Adjusted Angle";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1030;
    x->title="Delivery Verification Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1032;
    x->title="Verification Image Timing";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1034;
    x->title="Double Exposure Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1036;
    x->title="Double Exposure Ordering";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1038;
    x->title="Double Exposure Meterset (Trial)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x103A;
    x->title="Double Exposure Field Delta (Trial)";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1040;
    x->title="Related Reference RT Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1042;
    x->title="General Machine Verification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1044;
    x->title="Conventional Machine Verification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1046;
    x->title="Ion Machine Verification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1048;
    x->title="Failed Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x104A;
    x->title="Overridden Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x104C;
    x->title="Conventional Control Point Verification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x104E;
    x->title="Ion Control Point Verification Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1050;
    x->title="Attribute Occurrence Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1052;
    x->title="Attribute Occurrence Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1054;
    x->title="Attribute Item Selector";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1056;
    x->title="Attribute Occurrence Private Creator";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1057;
    x->title="Selector Sequence Pointer Items";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1200;
    x->title="Scheduled Procedure Step Priority";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1202;
    x->title="Worklist Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1204;
    x->title="Procedure Step Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1210;
    x->title="Scheduled Processing Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1212;
    x->title="Performed Processing Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1216;
    x->title="Unified Procedure Step Performed Procedure Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1220;
    x->title="Related Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1222;
    x->title="Procedure Step Relationship Type";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1224;
    x->title="Replaced Procedure Step Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1230;
    x->title="Deletion Lock";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1234;
    x->title="Receiving AE";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1236;
    x->title="Requesting AE";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1238;
    x->title="Reason for Cancellation";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1242;
    x->title="SCP Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1244;
    x->title="Subscription List Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1246;
    x->title="Unified Procedure Step List Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1324;
    x->title="Beam Order Index";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1338;
    x->title="Double Exposure Meterset";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x133A;
    x->title="Double Exposure Field Delta";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1401;
    x->title="Brachy Task Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1402;
    x->title="Continuation Start Total Reference Air Kerma";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1403;
    x->title="Continuation End Total Reference Air Kerma";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1404;
    x->title="Continuation Pulse Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1405;
    x->title="Channel Delivery Order Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1406;
    x->title="Referenced Channel Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1407;
    x->title="Start Cumulative Time Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1408;
    x->title="End Cumulative Time Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x1409;
    x->title="Omitted Channel Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x140A;
    x->title="Reason for Channel Omission";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x140B;
    x->title="Reason for Channel Omission Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x140C;
    x->title="Channel Delivery Order Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x140D;
    x->title="Channel Delivery Continuation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0074;
    x->tag[1]=0x140E;
    x->title="Omitted Application Setup Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0001;
    x->title="Implant Assembly Template Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0003;
    x->title="Implant Assembly Template Issuer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0006;
    x->title="Implant Assembly Template Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0008;
    x->title="Replaced Implant Assembly Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x000A;
    x->title="Implant Assembly Template Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x000C;
    x->title="Original Implant Assembly Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x000E;
    x->title="Derivation Implant Assembly Template Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0010;
    x->title="Implant Assembly Template Target Anatomy Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0020;
    x->title="Procedure Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0030;
    x->title="Surgical Technique";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0032;
    x->title="Component Types Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0034;
    x->title="Component Type Code Sequence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0036;
    x->title="Exclusive Component Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0038;
    x->title="Mandatory Component Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0040;
    x->title="Component Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0055;
    x->title="Component ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0060;
    x->title="Component Assembly Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0070;
    x->title="Component 1 Referenced ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0080;
    x->title="Component 1 Referenced Mating Feature Set ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x0090;
    x->title="Component 1 Referenced Mating Feature ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x00A0;
    x->title="Component 2 Referenced ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x00B0;
    x->title="Component 2 Referenced Mating Feature Set ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0076;
    x->tag[1]=0x00C0;
    x->title="Component 2 Referenced Mating Feature ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0001;
    x->title="Implant Template Group Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0010;
    x->title="Implant Template Group Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0020;
    x->title="Implant Template Group Issuer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0024;
    x->title="Implant Template Group Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0026;
    x->title="Replaced Implant Template Group Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0028;
    x->title="Implant Template Group Target Anatomy Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x002A;
    x->title="Implant Template Group Members Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x002E;
    x->title="Implant Template Group Member ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0050;
    x->title="3D Implant Template Group Member Matching Point";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0060;
    x->title="3D Implant Template Group Member Matching Axes";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0070;
    x->title="Implant Template Group Member Matching 2D Coordinates Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x0090;
    x->title="2D Implant Template Group Member Matching Point";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00A0;
    x->title="2D Implant Template Group Member Matching Axes";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00B0;
    x->title="Implant Template Group Variation Dimension Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00B2;
    x->title="Implant Template Group Variation Dimension Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00B4;
    x->title="Implant Template Group Variation Dimension Rank Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00B6;
    x->title="Referenced Implant Template Group Member ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0078;
    x->tag[1]=0x00B8;
    x->title="Implant Template Group Variation Dimension Rank";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0001;
    x->title="Surface Scan Acquisition Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0002;
    x->title="Surface Scan Mode Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0003;
    x->title="Registration Method Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0004;
    x->title="Shot Duration Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0005;
    x->title="Shot Offset Time";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0006;
    x->title="Surface Point Presentation Value Data";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0007;
    x->title="Surface Point Color CIELab Value Data";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0008;
    x->title="UV Mapping Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0009;
    x->title="Texture Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0010;
    x->title="U Value Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0011;
    x->title="V Value Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0012;
    x->title="Referenced Texture Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0080;
    x->tag[1]=0x0013;
    x->title="Referenced Surface Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0001;
    x->title="Assessment Summary";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0003;
    x->title="Assessment Summary Description";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0004;
    x->title="Assessed SOP Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0005;
    x->title="Referenced Comparison SOP Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0006;
    x->title="Number of Assessment Observations";
    x->vr="UL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0007;
    x->title="Assessment Observations Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0008;
    x->title="Observation Significance";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x000A;
    x->title="Observation Description";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x000C;
    x->title="Structured Constraint Observation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0010;
    x->title="Assessed Attribute Value Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0016;
    x->title="Assessment Set ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0017;
    x->title="Assessment Requester Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0018;
    x->title="Selector Attribute Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0019;
    x->title="Selector Attribute Keyword";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0021;
    x->title="Assessment Type Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0022;
    x->title="Observation Basis Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0023;
    x->title="Assessment Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0032;
    x->title="Constraint Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0033;
    x->title="Specification Selection Guidance";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0034;
    x->title="Constraint Value Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0035;
    x->title="Recommended Default Value Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0036;
    x->title="Constraint Violation Significance";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0082;
    x->tag[1]=0x0037;
    x->title="Constraint Violation Condition";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0130;
    x->title="Storage Media File-set ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0140;
    x->title="Storage Media File-set UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0200;
    x->title="Icon Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0904;
    x->title="Topic Title";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0906;
    x->title="Topic Subject";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0910;
    x->title="Topic Author";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0088;
    x->tag[1]=0x0912;
    x->title="Topic Keywords";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0100;
    x->tag[1]=0x0410;
    x->title="SOP Instance Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0100;
    x->tag[1]=0x0420;
    x->title="SOP Authorization DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0100;
    x->tag[1]=0x0424;
    x->title="SOP Authorization Comment";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0100;
    x->tag[1]=0x0426;
    x->title="Authorization Equipment Certification Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0005;
    x->title="MAC ID Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0010;
    x->title="MAC Calculation Transfer Syntax UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0015;
    x->title="MAC Algorithm";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0020;
    x->title="Data Elements Signed";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0100;
    x->title="Digital Signature UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0105;
    x->title="Digital Signature DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0110;
    x->title="Certificate Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0115;
    x->title="Certificate of Signer";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0120;
    x->title="Signature";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0305;
    x->title="Certified Timestamp Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0310;
    x->title="Certified Timestamp";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0315;
    x->title="";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0401;
    x->title="Digital Signature Purpose Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0402;
    x->title="Referenced Digital Signature Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0403;
    x->title="Referenced SOP Instance MAC Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0404;
    x->title="MAC";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0500;
    x->title="Encrypted Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0510;
    x->title="Encrypted Content Transfer Syntax UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0520;
    x->title="Encrypted Content";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0550;
    x->title="Modified Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0561;
    x->title="Original Attributes Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0562;
    x->title="Attribute Modification DateTime";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0563;
    x->title="Modifying System";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0564;
    x->title="Source of Previous Values";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x0400;
    x->tag[1]=0x0565;
    x->title="Reason for the Attribute Modification";
    x->vr="CS";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx0;
    //x->title="Escape Triplet";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx1;
    //x->title="Run Length Triplet";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx2;
    //x->title="Huffman Table Size";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx3;
    //x->title="Huffman Table Triplet";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx4;
    //x->title="Shift Table Size";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1000;
    //x->tag[1]=0xxxx5;
    //x->title="Shift Table Triplet";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x1010;
    //x->tag[1]=0xxxxx;
    //x->title="Zonal Map";
    //x->vr="US";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0010;
    x->title="Number of Copies";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x001E;
    x->title="Printer Configuration Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0020;
    x->title="Print Priority";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0030;
    x->title="Medium Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0040;
    x->title="Film Destination";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0050;
    x->title="Film Session Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0060;
    x->title="Memory Allocation";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0061;
    x->title="Maximum Memory Allocation";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0062;
    x->title="Color Image Printing Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0063;
    x->title="Collation Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0065;
    x->title="Annotation Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0067;
    x->title="Image Overlay Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0069;
    x->title="Presentation LUT Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x006A;
    x->title="Image Box Presentation LUT Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x00A0;
    x->title="Memory Bit Depth";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x00A1;
    x->title="Printing Bit Depth";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x00A2;
    x->title="Media Installed Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x00A4;
    x->title="Other Media Available Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x00A8;
    x->title="Supported Image Display Formats Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0500;
    x->title="Referenced Film Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2000;
    x->tag[1]=0x0510;
    x->title="Referenced Stored Print Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0010;
    x->title="Image Display Format";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0030;
    x->title="Annotation Display Format ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0040;
    x->title="Film Orientation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0050;
    x->title="Film Size ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0052;
    x->title="Printer Resolution ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0054;
    x->title="Default Printer Resolution ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0060;
    x->title="Magnification Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0080;
    x->title="Smoothing Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x00A6;
    x->title="Default Magnification Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x00A7;
    x->title="Other Magnification Types Available";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x00A8;
    x->title="Default Smoothing Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x00A9;
    x->title="Other Smoothing Types Available";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0100;
    x->title="Border Density";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0110;
    x->title="Empty Image Density";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0120;
    x->title="Min Density";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0130;
    x->title="Max Density";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0140;
    x->title="Trim";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0150;
    x->title="Configuration Information";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0152;
    x->title="Configuration Information Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0154;
    x->title="Maximum Collated Films";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x015E;
    x->title="Illumination";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0160;
    x->title="Reflected Ambient Light";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0376;
    x->title="Printer Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0500;
    x->title="Referenced Film Session Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0510;
    x->title="Referenced Image Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2010;
    x->tag[1]=0x0520;
    x->title="Referenced Basic Annotation Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0010;
    x->title="Image Box Position";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0020;
    x->title="Polarity";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0030;
    x->title="Requested Image Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0040;
    x->title="Requested Decimate/Crop Behavior";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0050;
    x->title="Requested Resolution ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x00A0;
    x->title="Requested Image Size Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x00A2;
    x->title="Decimate/Crop Result";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0110;
    x->title="Basic Grayscale Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0111;
    x->title="Basic Color Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0130;
    x->title="Referenced Image Overlay Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2020;
    x->tag[1]=0x0140;
    x->title="Referenced VOI LUT Box Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2030;
    x->tag[1]=0x0010;
    x->title="Annotation Position";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2030;
    x->tag[1]=0x0020;
    x->title="Text String";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0010;
    x->title="Referenced Overlay Plane Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0011;
    x->title="Referenced Overlay Plane Groups";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0020;
    x->title="Overlay Pixel Data Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0060;
    x->title="Overlay Magnification Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0070;
    x->title="Overlay Smoothing Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0072;
    x->title="Overlay or Image Magnification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0074;
    x->title="Magnify to Number of Columns";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0080;
    x->title="Overlay Foreground Density";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0082;
    x->title="Overlay Background Density";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0090;
    x->title="Overlay Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0100;
    x->title="Threshold Density";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2040;
    x->tag[1]=0x0500;
    x->title="Referenced Image Box Sequence (Retired)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2050;
    x->tag[1]=0x0010;
    x->title="Presentation LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2050;
    x->tag[1]=0x0020;
    x->title="Presentation LUT Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2050;
    x->tag[1]=0x0500;
    x->title="Referenced Presentation LUT Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0010;
    x->title="Print Job ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0020;
    x->title="Execution Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0030;
    x->title="Execution Status Info";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0040;
    x->title="Creation Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0050;
    x->title="Creation Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0070;
    x->title="Originator";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0140;
    x->title="Destination AE";
    x->vr="AE";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0160;
    x->title="Owner ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0170;
    x->title="Number of Films";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2100;
    x->tag[1]=0x0500;
    x->title="Referenced Print Job Sequence (Pull Stored Print)";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2110;
    x->tag[1]=0x0010;
    x->title="Printer Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2110;
    x->tag[1]=0x0020;
    x->title="Printer Status Info";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2110;
    x->tag[1]=0x0030;
    x->title="Printer Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2110;
    x->tag[1]=0x0099;
    x->title="Print Queue ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2120;
    x->tag[1]=0x0010;
    x->title="Queue Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2120;
    x->tag[1]=0x0050;
    x->title="Print Job Description Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2120;
    x->tag[1]=0x0070;
    x->title="Referenced Print Job Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0010;
    x->title="Print Management Capabilities Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0015;
    x->title="Printer Characteristics Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0030;
    x->title="Film Box Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0040;
    x->title="Image Box Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0050;
    x->title="Annotation Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0060;
    x->title="Image Overlay Box Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x0080;
    x->title="Presentation LUT Content Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x00A0;
    x->title="Proposed Study Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2130;
    x->tag[1]=0x00C0;
    x->title="Original Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0001;
    x->title="Label Using Information Extracted From Instances";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0002;
    x->title="Label Text";
    x->vr="UT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0003;
    x->title="Label Style Selection";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0004;
    x->title="Media Disposition";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0005;
    x->title="Barcode Value";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0006;
    x->title="Barcode Symbology";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0007;
    x->title="Allow Media Splitting";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0008;
    x->title="Include Non-DICOM Objects";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0009;
    x->title="Include Display Application";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000A;
    x->title="Preserve Composite Instances After Media Creation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000B;
    x->title="Total Number of Pieces of Media Created";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000C;
    x->title="Requested Media Application Profile";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000D;
    x->title="Referenced Storage Media Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000E;
    x->title="Failure Attributes";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x000F;
    x->title="Allow Lossy Compression";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x2200;
    x->tag[1]=0x0020;
    x->title="Request Priority";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0002;
    x->title="RT Image Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0003;
    x->title="RT Image Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0004;
    x->title="RT Image Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x000A;
    x->title="Reported Values Origin";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x000C;
    x->title="RT Image Plane";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x000D;
    x->title="X-Ray Image Receptor Translation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x000E;
    x->title="X-Ray Image Receptor Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0010;
    x->title="RT Image Orientation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0011;
    x->title="Image Plane Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0012;
    x->title="RT Image Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0020;
    x->title="Radiation Machine Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0022;
    x->title="Radiation Machine SAD";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0024;
    x->title="Radiation Machine SSD";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0026;
    x->title="RT Image SID";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0028;
    x->title="Source to Reference Object Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0029;
    x->title="Fraction Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0030;
    x->title="Exposure Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0032;
    x->title="Meterset Exposure";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0034;
    x->title="Diaphragm Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0040;
    x->title="Fluence Map Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0041;
    x->title="Fluence Data Source";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0042;
    x->title="Fluence Data Scale";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0050;
    x->title="Primary Fluence Mode Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0051;
    x->title="Fluence Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3002;
    x->tag[1]=0x0052;
    x->title="Fluence Mode ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0001;
    x->title="DVH Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0002;
    x->title="Dose Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0004;
    x->title="Dose Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0005;
    x->title="Spatial Transform of Dose";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0006;
    x->title="Dose Comment";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0008;
    x->title="Normalization Point";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x000A;
    x->title="Dose Summation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x000C;
    x->title="Grid Frame Offset Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x000E;
    x->title="Dose Grid Scaling";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0010;
    x->title="RT Dose ROI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0012;
    x->title="Dose Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0014;
    x->title="Tissue Heterogeneity Correction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0040;
    x->title="DVH Normalization Point";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0042;
    x->title="DVH Normalization Dose Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0050;
    x->title="DVH Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0052;
    x->title="DVH Dose Scaling";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0054;
    x->title="DVH Volume Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0056;
    x->title="DVH Number of Bins";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0058;
    x->title="DVH Data";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0060;
    x->title="DVH Referenced ROI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0062;
    x->title="DVH ROI Contribution Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0070;
    x->title="DVH Minimum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0072;
    x->title="DVH Maximum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3004;
    x->tag[1]=0x0074;
    x->title="DVH Mean Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0002;
    x->title="Structure Set Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0004;
    x->title="Structure Set Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0006;
    x->title="Structure Set Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0008;
    x->title="Structure Set Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0009;
    x->title="Structure Set Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0010;
    x->title="Referenced Frame of Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0012;
    x->title="RT Referenced Study Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0014;
    x->title="RT Referenced Series Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0016;
    x->title="Contour Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0018;
    x->title="Predecessor Structure Set Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0020;
    x->title="Structure Set ROI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0022;
    x->title="ROI Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0024;
    x->title="Referenced Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0026;
    x->title="ROI Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0028;
    x->title="ROI Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x002A;
    x->title="ROI Display Color";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x002C;
    x->title="ROI Volume";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0030;
    x->title="RT Related ROI Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0033;
    x->title="RT ROI Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0036;
    x->title="ROI Generation Algorithm";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0038;
    x->title="ROI Generation Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0039;
    x->title="ROI Contour Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0040;
    x->title="Contour Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0042;
    x->title="Contour Geometric Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0044;
    x->title="Contour Slab Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0045;
    x->title="Contour Offset Vector";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0046;
    x->title="Number of Contour Points";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0048;
    x->title="Contour Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0049;
    x->title="Attached Contours";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0050;
    x->title="Contour Data";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0080;
    x->title="RT ROI Observations Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0082;
    x->title="Observation Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0084;
    x->title="Referenced ROI Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0085;
    x->title="ROI Observation Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0086;
    x->title="RT ROI Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x0088;
    x->title="ROI Observation Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00A0;
    x->title="Related RT ROI Observations Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00A4;
    x->title="RT ROI Interpreted Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00A6;
    x->title="ROI Interpreter";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B0;
    x->title="ROI Physical Properties Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B2;
    x->title="ROI Physical Property";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B4;
    x->title="ROI Physical Property Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B6;
    x->title="ROI Elemental Composition Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B7;
    x->title="ROI Elemental Composition Atomic Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B8;
    x->title="ROI Elemental Composition Atomic Mass Fraction";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00B9;
    x->title="Additional RT ROI Identification Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00C0;
    x->title="Frame of Reference Relationship Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00C2;
    x->title="Related Frame of Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00C4;
    x->title="Frame of Reference Transformation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00C6;
    x->title="Frame of Reference Transformation Matrix";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3006;
    x->tag[1]=0x00C8;
    x->title="Frame of Reference Transformation Comment";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0010;
    x->title="Measured Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0012;
    x->title="Measured Dose Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0014;
    x->title="Measured Dose Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0016;
    x->title="Measured Dose Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0020;
    x->title="Treatment Session Beam Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0021;
    x->title="Treatment Session Ion Beam Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0022;
    x->title="Current Fraction Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0024;
    x->title="Treatment Control Point Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0025;
    x->title="Treatment Control Point Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x002A;
    x->title="Treatment Termination Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x002B;
    x->title="Treatment Termination Code";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x002C;
    x->title="Treatment Verification Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0030;
    x->title="Referenced Treatment Record Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0032;
    x->title="Specified Primary Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0033;
    x->title="Specified Secondary Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0036;
    x->title="Delivered Primary Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0037;
    x->title="Delivered Secondary Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x003A;
    x->title="Specified Treatment Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x003B;
    x->title="Delivered Treatment Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0040;
    x->title="Control Point Delivery Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0041;
    x->title="Ion Control Point Delivery Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0042;
    x->title="Specified Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0044;
    x->title="Delivered Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0045;
    x->title="Meterset Rate Set";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0046;
    x->title="Meterset Rate Delivered";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0047;
    x->title="Scan Spot Metersets Delivered";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0048;
    x->title="Dose Rate Delivered";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0050;
    x->title="Treatment Summary Calculated Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0052;
    x->title="Cumulative Dose to Dose Reference";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0054;
    x->title="First Treatment Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0056;
    x->title="Most Recent Treatment Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x005A;
    x->title="Number of Fractions Delivered";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0060;
    x->title="Override Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0061;
    x->title="Parameter Sequence Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0062;
    x->title="Override Parameter Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0063;
    x->title="Parameter Item Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0064;
    x->title="Measured Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0065;
    x->title="Parameter Pointer";
    x->vr="AT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0066;
    x->title="Override Reason";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0068;
    x->title="Corrected Parameter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x006A;
    x->title="Correction Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0070;
    x->title="Calculated Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0072;
    x->title="Calculated Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0074;
    x->title="Calculated Dose Reference Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0076;
    x->title="Calculated Dose Reference Dose Value";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0078;
    x->title="Start Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x007A;
    x->title="End Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0080;
    x->title="Referenced Measured Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0082;
    x->title="Referenced Measured Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0090;
    x->title="Referenced Calculated Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0092;
    x->title="Referenced Calculated Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00A0;
    x->title="Beam Limiting Device Leaf Pairs Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00B0;
    x->title="Recorded Wedge Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00C0;
    x->title="Recorded Compensator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00D0;
    x->title="Recorded Block Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00E0;
    x->title="Treatment Summary Measured Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00F0;
    x->title="Recorded Snout Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00F2;
    x->title="Recorded Range Shifter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00F4;
    x->title="Recorded Lateral Spreading Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x00F6;
    x->title="Recorded Range Modulator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0100;
    x->title="Recorded Source Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0105;
    x->title="Source Serial Number";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0110;
    x->title="Treatment Session Application Setup Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0116;
    x->title="Application Setup Check";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0120;
    x->title="Recorded Brachy Accessory Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0122;
    x->title="Referenced Brachy Accessory Device Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0130;
    x->title="Recorded Channel Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0132;
    x->title="Specified Channel Total Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0134;
    x->title="Delivered Channel Total Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0136;
    x->title="Specified Number of Pulses";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0138;
    x->title="Delivered Number of Pulses";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x013A;
    x->title="Specified Pulse Repetition Interval";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x013C;
    x->title="Delivered Pulse Repetition Interval";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0140;
    x->title="Recorded Source Applicator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0142;
    x->title="Referenced Source Applicator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0150;
    x->title="Recorded Channel Shield Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0152;
    x->title="Referenced Channel Shield Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0160;
    x->title="Brachy Control Point Delivered Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0162;
    x->title="Safe Position Exit Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0164;
    x->title="Safe Position Exit Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0166;
    x->title="Safe Position Return Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0168;
    x->title="Safe Position Return Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0171;
    x->title="Pulse Specific Brachy Control Point Delivered Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0172;
    x->title="Pulse Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0173;
    x->title="Brachy Pulse Control Point Delivered Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0200;
    x->title="Current Treatment Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0202;
    x->title="Treatment Status Comment";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0220;
    x->title="Fraction Group Summary Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0223;
    x->title="Referenced Fraction Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0224;
    x->title="Fraction Group Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0230;
    x->title="Beam Stopper Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0240;
    x->title="Fraction Status Summary Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0250;
    x->title="Treatment Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x3008;
    x->tag[1]=0x0251;
    x->title="Treatment Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0002;
    x->title="RT Plan Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0003;
    x->title="RT Plan Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0004;
    x->title="RT Plan Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0006;
    x->title="RT Plan Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0007;
    x->title="RT Plan Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0009;
    x->title="Treatment Protocols";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x000A;
    x->title="Plan Intent";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x000B;
    x->title="Treatment Sites";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x000C;
    x->title="RT Plan Geometry";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x000E;
    x->title="Prescription Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0010;
    x->title="Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0012;
    x->title="Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0013;
    x->title="Dose Reference UID";
    x->vr="UI";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0014;
    x->title="Dose Reference Structure Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0015;
    x->title="Nominal Beam Energy Unit";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0016;
    x->title="Dose Reference Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0018;
    x->title="Dose Reference Point Coordinates";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x001A;
    x->title="Nominal Prior Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0020;
    x->title="Dose Reference Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0021;
    x->title="Constraint Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0022;
    x->title="Delivery Warning Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0023;
    x->title="Delivery Maximum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0025;
    x->title="Target Minimum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0026;
    x->title="Target Prescription Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0027;
    x->title="Target Maximum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0028;
    x->title="Target Underdose Volume Fraction";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x002A;
    x->title="Organ at Risk Full-volume Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x002B;
    x->title="Organ at Risk Limit Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x002C;
    x->title="Organ at Risk Maximum Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x002D;
    x->title="Organ at Risk Overdose Volume Fraction";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0040;
    x->title="Tolerance Table Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0042;
    x->title="Tolerance Table Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0043;
    x->title="Tolerance Table Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0044;
    x->title="Gantry Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0046;
    x->title="Beam Limiting Device Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0048;
    x->title="Beam Limiting Device Tolerance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x004A;
    x->title="Beam Limiting Device Position Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x004B;
    x->title="Snout Position Tolerance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x004C;
    x->title="Patient Support Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x004E;
    x->title="Table Top Eccentric Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x004F;
    x->title="Table Top Pitch Angle Tolerance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0050;
    x->title="Table Top Roll Angle Tolerance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0051;
    x->title="Table Top Vertical Position Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0052;
    x->title="Table Top Longitudinal Position Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0053;
    x->title="Table Top Lateral Position Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0055;
    x->title="RT Plan Relationship";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0070;
    x->title="Fraction Group Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0071;
    x->title="Fraction Group Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0072;
    x->title="Fraction Group Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0078;
    x->title="Number of Fractions Planned";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0079;
    x->title="Number of Fraction Pattern Digits Per Day";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x007A;
    x->title="Repeat Fraction Cycle Length";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x007B;
    x->title="Fraction Pattern";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0080;
    x->title="Number of Beams";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0082;
    x->title="Beam Dose Specification Point";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0084;
    x->title="Beam Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0086;
    x->title="Beam Meterset";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0088;
    x->title="Beam Dose Point Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0089;
    x->title="Beam Dose Point Equivalent Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008A;
    x->title="Beam Dose Point SSD";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008B;
    x->title="Beam Dose Meaning";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008C;
    x->title="Beam Dose Verification Control Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008D;
    x->title="Average Beam Dose Point Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008E;
    x->title="Average Beam Dose Point Equivalent Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x008F;
    x->title="Average Beam Dose Point SSD";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0090;
    x->title="Beam Dose Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0091;
    x->title="Alternate Beam Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0092;
    x->title="Alternate Beam Dose Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00A0;
    x->title="Number of Brachy Application Setups";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00A2;
    x->title="Brachy Application Setup Dose Specification Point";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00A4;
    x->title="Brachy Application Setup Dose";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B0;
    x->title="Beam Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B2;
    x->title="Treatment Machine Name";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B3;
    x->title="Primary Dosimeter Unit";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B4;
    x->title="Source-Axis Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B6;
    x->title="Beam Limiting Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00B8;
    x->title="RT Beam Limiting Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00BA;
    x->title="Source to Beam Limiting Device Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00BB;
    x->title="Isocenter to Beam Limiting Device Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00BC;
    x->title="Number of Leaf/Jaw Pairs";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00BE;
    x->title="Leaf Position Boundaries";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C0;
    x->title="Beam Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C2;
    x->title="Beam Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C3;
    x->title="Beam Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C4;
    x->title="Beam Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C5;
    x->title="Beam Delivery Duration Limit";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C6;
    x->title="Radiation Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C7;
    x->title="High-Dose Technique Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00C8;
    x->title="Reference Image Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00CA;
    x->title="Planned Verification Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00CC;
    x->title="Imaging Device-Specific Acquisition Parameters";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00CE;
    x->title="Treatment Delivery Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D0;
    x->title="Number of Wedges";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D1;
    x->title="Wedge Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D2;
    x->title="Wedge Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D3;
    x->title="Wedge Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D4;
    x->title="Wedge ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D5;
    x->title="Wedge Angle";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D6;
    x->title="Wedge Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D7;
    x->title="Total Wedge Tray Water-Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D8;
    x->title="Wedge Orientation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00D9;
    x->title="Isocenter to Wedge Tray Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00DA;
    x->title="Source to Wedge Tray Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00DB;
    x->title="Wedge Thin Edge Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00DC;
    x->title="Bolus ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00DD;
    x->title="Bolus Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00DE;
    x->title="Effective Wedge Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E0;
    x->title="Number of Compensators";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E1;
    x->title="Material ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E2;
    x->title="Total Compensator Tray Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E3;
    x->title="Compensator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E4;
    x->title="Compensator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E5;
    x->title="Compensator ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E6;
    x->title="Source to Compensator Tray Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E7;
    x->title="Compensator Rows";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E8;
    x->title="Compensator Columns";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00E9;
    x->title="Compensator Pixel Spacing";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00EA;
    x->title="Compensator Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00EB;
    x->title="Compensator Transmission Data";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00EC;
    x->title="Compensator Thickness Data";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00ED;
    x->title="Number of Boli";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00EE;
    x->title="Compensator Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00EF;
    x->title="Compensator Tray ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F0;
    x->title="Number of Blocks";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F2;
    x->title="Total Block Tray Factor";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F3;
    x->title="Total Block Tray Water-Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F4;
    x->title="Block Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F5;
    x->title="Block Tray ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F6;
    x->title="Source to Block Tray Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F7;
    x->title="Isocenter to Block Tray Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F8;
    x->title="Block Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00F9;
    x->title="Accessory Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00FA;
    x->title="Block Divergence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00FB;
    x->title="Block Mounting Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00FC;
    x->title="Block Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x00FE;
    x->title="Block Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0100;
    x->title="Block Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0102;
    x->title="Block Transmission";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0104;
    x->title="Block Number of Points";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0106;
    x->title="Block Data";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0107;
    x->title="Applicator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0108;
    x->title="Applicator ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0109;
    x->title="Applicator Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x010A;
    x->title="Applicator Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x010C;
    x->title="Cumulative Dose Reference Coefficient";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x010E;
    x->title="Final Cumulative Meterset Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0110;
    x->title="Number of Control Points";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0111;
    x->title="Control Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0112;
    x->title="Control Point Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0114;
    x->title="Nominal Beam Energy";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0115;
    x->title="Dose Rate Set";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0116;
    x->title="Wedge Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0118;
    x->title="Wedge Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x011A;
    x->title="Beam Limiting Device Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x011C;
    x->title="Leaf/Jaw Positions";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x011E;
    x->title="Gantry Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x011F;
    x->title="Gantry Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0120;
    x->title="Beam Limiting Device Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0121;
    x->title="Beam Limiting Device Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0122;
    x->title="Patient Support Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0123;
    x->title="Patient Support Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0124;
    x->title="Table Top Eccentric Axis Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0125;
    x->title="Table Top Eccentric Angle";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0126;
    x->title="Table Top Eccentric Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0128;
    x->title="Table Top Vertical Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0129;
    x->title="Table Top Longitudinal Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x012A;
    x->title="Table Top Lateral Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x012C;
    x->title="Isocenter Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x012E;
    x->title="Surface Entry Point";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0130;
    x->title="Source to Surface Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0131;
    x->title="Average Beam Dose Point Source to External Contour Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0132;
    x->title="Source to External Contour Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0133;
    x->title="External Contour Entry Point";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0134;
    x->title="Cumulative Meterset Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0140;
    x->title="Table Top Pitch Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0142;
    x->title="Table Top Pitch Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0144;
    x->title="Table Top Roll Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0146;
    x->title="Table Top Roll Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0148;
    x->title="Head Fixation Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x014A;
    x->title="Gantry Pitch Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x014C;
    x->title="Gantry Pitch Rotation Direction";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x014E;
    x->title="Gantry Pitch Angle Tolerance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0150;
    x->title="Fixation Eye";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0151;
    x->title="Chair Head Frame Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0152;
    x->title="Head Fixation Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0153;
    x->title="Chair Head Frame Position Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0154;
    x->title="Fixation Light Azimuthal Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0155;
    x->title="Fixation Light Polar Angle Tolerance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0180;
    x->title="Patient Setup Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0182;
    x->title="Patient Setup Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0183;
    x->title="Patient Setup Label";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0184;
    x->title="Patient Additional Position";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0190;
    x->title="Fixation Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0192;
    x->title="Fixation Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0194;
    x->title="Fixation Device Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0196;
    x->title="Fixation Device Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0198;
    x->title="Fixation Device Position";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0199;
    x->title="Fixation Device Pitch Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x019A;
    x->title="Fixation Device Roll Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01A0;
    x->title="Shielding Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01A2;
    x->title="Shielding Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01A4;
    x->title="Shielding Device Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01A6;
    x->title="Shielding Device Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01A8;
    x->title="Shielding Device Position";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01B0;
    x->title="Setup Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01B2;
    x->title="Setup Technique Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01B4;
    x->title="Setup Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01B6;
    x->title="Setup Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01B8;
    x->title="Setup Device Label";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01BA;
    x->title="Setup Device Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01BC;
    x->title="Setup Device Parameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01D0;
    x->title="Setup Reference Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01D2;
    x->title="Table Top Vertical Setup Displacement";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01D4;
    x->title="Table Top Longitudinal Setup Displacement";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x01D6;
    x->title="Table Top Lateral Setup Displacement";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0200;
    x->title="Brachy Treatment Technique";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0202;
    x->title="Brachy Treatment Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0206;
    x->title="Treatment Machine Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0210;
    x->title="Source Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0212;
    x->title="Source Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0214;
    x->title="Source Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0216;
    x->title="Source Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0218;
    x->title="Active Source Diameter";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x021A;
    x->title="Active Source Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x021B;
    x->title="Source Model ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x021C;
    x->title="Source Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0222;
    x->title="Source Encapsulation Nominal Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0224;
    x->title="Source Encapsulation Nominal Transmission";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0226;
    x->title="Source Isotope Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0228;
    x->title="Source Isotope Half Life";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0229;
    x->title="Source Strength Units";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x022A;
    x->title="Reference Air Kerma Rate";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x022B;
    x->title="Source Strength";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x022C;
    x->title="Source Strength Reference Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x022E;
    x->title="Source Strength Reference Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0230;
    x->title="Application Setup Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0232;
    x->title="Application Setup Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0234;
    x->title="Application Setup Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0236;
    x->title="Application Setup Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0238;
    x->title="Application Setup Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0240;
    x->title="Template Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0242;
    x->title="Template Type";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0244;
    x->title="Template Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0250;
    x->title="Total Reference Air Kerma";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0260;
    x->title="Brachy Accessory Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0262;
    x->title="Brachy Accessory Device Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0263;
    x->title="Brachy Accessory Device ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0264;
    x->title="Brachy Accessory Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0266;
    x->title="Brachy Accessory Device Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x026A;
    x->title="Brachy Accessory Device Nominal Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x026C;
    x->title="Brachy Accessory Device Nominal Transmission";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0280;
    x->title="Channel Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0282;
    x->title="Channel Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0284;
    x->title="Channel Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0286;
    x->title="Channel Total Time";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0288;
    x->title="Source Movement Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x028A;
    x->title="Number of Pulses";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x028C;
    x->title="Pulse Repetition Interval";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0290;
    x->title="Source Applicator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0291;
    x->title="Source Applicator ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0292;
    x->title="Source Applicator Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0294;
    x->title="Source Applicator Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0296;
    x->title="Source Applicator Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0298;
    x->title="Source Applicator Manufacturer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x029C;
    x->title="Source Applicator Wall Nominal Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x029E;
    x->title="Source Applicator Wall Nominal Transmission";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02A0;
    x->title="Source Applicator Step Size";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02A2;
    x->title="Transfer Tube Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02A4;
    x->title="Transfer Tube Length";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02B0;
    x->title="Channel Shield Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02B2;
    x->title="Channel Shield Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02B3;
    x->title="Channel Shield ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02B4;
    x->title="Channel Shield Name";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02B8;
    x->title="Channel Shield Nominal Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02BA;
    x->title="Channel Shield Nominal Transmission";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02C8;
    x->title="Final Cumulative Time Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02D0;
    x->title="Brachy Control Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02D2;
    x->title="Control Point Relative Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02D4;
    x->title="Control Point 3D Position";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02D6;
    x->title="Cumulative Time Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E0;
    x->title="Compensator Divergence";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E1;
    x->title="Compensator Mounting Position";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E2;
    x->title="Source to Compensator Distance";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E3;
    x->title="Total Compensator Tray Water-Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E4;
    x->title="Isocenter to Compensator Tray Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E5;
    x->title="Compensator Column Offset";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E6;
    x->title="Isocenter to Compensator Distances";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E7;
    x->title="Compensator Relative Stopping Power Ratio";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02E8;
    x->title="Compensator Milling Tool Diameter";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02EA;
    x->title="Ion Range Compensator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x02EB;
    x->title="Compensator Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0302;
    x->title="Radiation Mass Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0304;
    x->title="Radiation Atomic Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0306;
    x->title="Radiation Charge State";
    x->vr="SS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0308;
    x->title="Scan Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0309;
    x->title="Modulated Scan Mode Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x030A;
    x->title="Virtual Source-Axis Distances";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x030C;
    x->title="Snout Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x030D;
    x->title="Snout Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x030F;
    x->title="Snout ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0312;
    x->title="Number of Range Shifters";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0314;
    x->title="Range Shifter Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0316;
    x->title="Range Shifter Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0318;
    x->title="Range Shifter ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0320;
    x->title="Range Shifter Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0322;
    x->title="Range Shifter Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0330;
    x->title="Number of Lateral Spreading Devices";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0332;
    x->title="Lateral Spreading Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0334;
    x->title="Lateral Spreading Device Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0336;
    x->title="Lateral Spreading Device ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0338;
    x->title="Lateral Spreading Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x033A;
    x->title="Lateral Spreading Device Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x033C;
    x->title="Lateral Spreading Device Water Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0340;
    x->title="Number of Range Modulators";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0342;
    x->title="Range Modulator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0344;
    x->title="Range Modulator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0346;
    x->title="Range Modulator ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0348;
    x->title="Range Modulator Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x034A;
    x->title="Range Modulator Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x034C;
    x->title="Beam Current Modulation ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0350;
    x->title="Patient Support Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0352;
    x->title="Patient Support ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0354;
    x->title="Patient Support Accessory Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0355;
    x->title="Tray Accessory Code";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0356;
    x->title="Fixation Light Azimuthal Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0358;
    x->title="Fixation Light Polar Angle";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x035A;
    x->title="Meterset Rate";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0360;
    x->title="Range Shifter Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0362;
    x->title="Range Shifter Setting";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0364;
    x->title="Isocenter to Range Shifter Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0366;
    x->title="Range Shifter Water Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0370;
    x->title="Lateral Spreading Device Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0372;
    x->title="Lateral Spreading Device Setting";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0374;
    x->title="Isocenter to Lateral Spreading Device Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0380;
    x->title="Range Modulator Settings Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0382;
    x->title="Range Modulator Gating Start Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0384;
    x->title="Range Modulator Gating Stop Value";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0386;
    x->title="Range Modulator Gating Start Water Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0388;
    x->title="Range Modulator Gating Stop Water Equivalent Thickness";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x038A;
    x->title="Isocenter to Range Modulator Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0390;
    x->title="Scan Spot Tune ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0391;
    x->title="Scan Spot Prescribed Indices";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0392;
    x->title="Number of Scan Spot Positions";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0393;
    x->title="Scan Spot Reordered";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0394;
    x->title="Scan Spot Position Map";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0395;
    x->title="Scan Spot Reordering Allowed";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0396;
    x->title="Scan Spot Meterset Weights";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0398;
    x->title="Scanning Spot Size";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x039A;
    x->title="Number of Paintings";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03A0;
    x->title="Ion Tolerance Table Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03A2;
    x->title="Ion Beam Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03A4;
    x->title="Ion Beam Limiting Device Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03A6;
    x->title="Ion Block Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03A8;
    x->title="Ion Control Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03AA;
    x->title="Ion Wedge Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x03AC;
    x->title="Ion Wedge Position Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0401;
    x->title="Referenced Setup Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0402;
    x->title="Setup Image Comment";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0410;
    x->title="Motion Synchronization Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0412;
    x->title="Control Point Orientation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0420;
    x->title="General Accessory Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0421;
    x->title="General Accessory ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0422;
    x->title="General Accessory Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0423;
    x->title="General Accessory Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0424;
    x->title="General Accessory Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0425;
    x->title="Source to General Accessory Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0431;
    x->title="Applicator Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0432;
    x->title="Applicator Aperture Shape";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0433;
    x->title="Applicator Opening";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0434;
    x->title="Applicator Opening X";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0435;
    x->title="Applicator Opening Y";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0436;
    x->title="Source to Applicator Mounting Position Distance";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0440;
    x->title="Number of Block Slab Items";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0441;
    x->title="Block Slab Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0442;
    x->title="Block Slab Thickness";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0443;
    x->title="Block Slab Number";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0450;
    x->title="Device Motion Control Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0451;
    x->title="Device Motion Execution Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0452;
    x->title="Device Motion Observation Mode";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0453;
    x->title="Device Motion Parameter Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0501;
    x->title="Distal Depth Fraction";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0502;
    x->title="Distal Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0503;
    x->title="Nominal Range Modulation Fractions";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0504;
    x->title="Nominal Range Modulated Region Depths";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0505;
    x->title="Depth Dose Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0506;
    x->title="Delivered Depth Dose Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0507;
    x->title="Delivered Distal Depth Fraction";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0508;
    x->title="Delivered Distal Depth";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0509;
    x->title="Delivered Nominal Range Modulation Fractions";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0510;
    x->title="Delivered Nominal Range Modulated Region Depths";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0511;
    x->title="Delivered Reference Dose Definition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300A;
    x->tag[1]=0x0512;
    x->title="Reference Dose Definition";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0002;
    x->title="Referenced RT Plan Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0004;
    x->title="Referenced Beam Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0006;
    x->title="Referenced Beam Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0007;
    x->title="Referenced Reference Image Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0008;
    x->title="Start Cumulative Meterset Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0009;
    x->title="End Cumulative Meterset Weight";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x000A;
    x->title="Referenced Brachy Application Setup Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x000C;
    x->title="Referenced Brachy Application Setup Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x000E;
    x->title="Referenced Source Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0020;
    x->title="Referenced Fraction Group Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0022;
    x->title="Referenced Fraction Group Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0040;
    x->title="Referenced Verification Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0042;
    x->title="Referenced Reference Image Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0050;
    x->title="Referenced Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0051;
    x->title="Referenced Dose Reference Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0055;
    x->title="Brachy Referenced Dose Reference Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0060;
    x->title="Referenced Structure Set Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x006A;
    x->title="Referenced Patient Setup Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0080;
    x->title="Referenced Dose Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00A0;
    x->title="Referenced Tolerance Table Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00B0;
    x->title="Referenced Bolus Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00C0;
    x->title="Referenced Wedge Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00D0;
    x->title="Referenced Compensator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00E0;
    x->title="Referenced Block Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00F0;
    x->title="Referenced Control Point Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00F2;
    x->title="Referenced Control Point Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00F4;
    x->title="Referenced Start Control Point Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x00F6;
    x->title="Referenced Stop Control Point Index";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0100;
    x->title="Referenced Range Shifter Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0102;
    x->title="Referenced Lateral Spreading Device Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0104;
    x->title="Referenced Range Modulator Number";
    x->vr="IS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0111;
    x->title="Omitted Beam Task Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0112;
    x->title="Reason for Omission";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300C;
    x->tag[1]=0x0113;
    x->title="Reason for Omission Description";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300E;
    x->tag[1]=0x0002;
    x->title="Approval Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300E;
    x->tag[1]=0x0004;
    x->title="Review Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300E;
    x->tag[1]=0x0005;
    x->title="Review Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x300E;
    x->tag[1]=0x0008;
    x->title="Reviewer Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4000;
    x->tag[1]=0x0010;
    x->title="Arbitrary";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4000;
    x->tag[1]=0x4000;
    x->title="Text Comments";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0040;
    x->title="Results ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0042;
    x->title="Results ID Issuer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0050;
    x->title="Referenced Interpretation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x00FF;
    x->title="Report Production Status (Trial)";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0100;
    x->title="Interpretation Recorded Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0101;
    x->title="Interpretation Recorded Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0102;
    x->title="Interpretation Recorder";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0103;
    x->title="Reference to Recorded Sound";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0108;
    x->title="Interpretation Transcription Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0109;
    x->title="Interpretation Transcription Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x010A;
    x->title="Interpretation Transcriber";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x010B;
    x->title="Interpretation Text";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x010C;
    x->title="Interpretation Author";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0111;
    x->title="Interpretation Approver Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0112;
    x->title="Interpretation Approval Date";
    x->vr="DA";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0113;
    x->title="Interpretation Approval Time";
    x->vr="TM";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0114;
    x->title="Physician Approving Interpretation";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0115;
    x->title="Interpretation Diagnosis Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0117;
    x->title="Interpretation Diagnosis Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0118;
    x->title="Results Distribution List Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0119;
    x->title="Distribution Name";
    x->vr="PN";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x011A;
    x->title="Distribution Address";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0200;
    x->title="Interpretation ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0202;
    x->title="Interpretation ID Issuer";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0210;
    x->title="Interpretation Type ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0212;
    x->title="Interpretation Status ID";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x0300;
    x->title="Impressions";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4008;
    x->tag[1]=0x4000;
    x->title="Results Comments";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x0001;
    x->title="Low Energy Detectors";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x0002;
    x->title="High Energy Detectors";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x0004;
    x->title="Detector Geometry Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1001;
    x->title="Threat ROI Voxel Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1004;
    x->title="Threat ROI Base";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1005;
    x->title="Threat ROI Extents";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1006;
    x->title="Threat ROI Bitmap";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1007;
    x->title="Route Segment ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1008;
    x->title="Gantry Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1009;
    x->title="OOI Owner Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x100A;
    x->title="Route Segment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1010;
    x->title="Potential Threat Object ID";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1011;
    x->title="Threat Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1012;
    x->title="Threat Category";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1013;
    x->title="Threat Category Description";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1014;
    x->title="ATD Ability Assessment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1015;
    x->title="ATD Assessment Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1016;
    x->title="ATD Assessment Probability";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1017;
    x->title="Mass";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1018;
    x->title="Density";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1019;
    x->title="Z Effective";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101A;
    x->title="Boarding Pass ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101B;
    x->title="Center of Mass";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101C;
    x->title="Center of PTO";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101D;
    x->title="Bounding Polygon";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101E;
    x->title="Route Segment Start Location ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x101F;
    x->title="Route Segment End Location ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1020;
    x->title="Route Segment Location ID Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1021;
    x->title="Abort Reason";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1023;
    x->title="Volume of PTO";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1024;
    x->title="Abort Flag";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1025;
    x->title="Route Segment Start Time";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1026;
    x->title="Route Segment End Time";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1027;
    x->title="TDR Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1028;
    x->title="International Route Segment";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1029;
    x->title="Threat Detection Algorithm and Version";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x102A;
    x->title="Assigned Location";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x102B;
    x->title="Alarm Decision Time";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1031;
    x->title="Alarm Decision";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1033;
    x->title="Number of Total Objects";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1034;
    x->title="Number of Alarm Objects";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1037;
    x->title="PTO Representation Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1038;
    x->title="ATD Assessment Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1039;
    x->title="TIP Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x103A;
    x->title="Version";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1041;
    x->title="OOI Owner Creation Time";
    x->vr="DT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1042;
    x->title="OOI Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1043;
    x->title="OOI Size";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1044;
    x->title="Acquisition Status";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1045;
    x->title="Basis Materials Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1046;
    x->title="Phantom Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1047;
    x->title="OOI Owner Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1048;
    x->title="Scan Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1051;
    x->title="Itinerary ID";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1052;
    x->title="Itinerary ID Type";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1053;
    x->title="Itinerary ID Assigning Authority";
    x->vr="LO";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1054;
    x->title="Route ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1055;
    x->title="Route ID Assigning Authority";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1056;
    x->title="Inbound Arrival Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1058;
    x->title="Carrier ID";
    x->vr="SH";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1059;
    x->title="Carrier ID Assigning Authority";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1060;
    x->title="Source Orientation";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1061;
    x->title="Source Position";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1062;
    x->title="Belt Height";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1064;
    x->title="Algorithm Routing Code Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1067;
    x->title="Transport Classification";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1068;
    x->title="OOI Type Descriptor";
    x->vr="LT";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1069;
    x->title="Total Processing Time";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x106C;
    x->title="Detector Calibration Data";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x106D;
    x->title="Additional Screening Performed";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x106E;
    x->title="Additional Inspection Selection Criteria";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x106F;
    x->title="Additional Inspection Method Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1070;
    x->title="AIT Device Type";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1071;
    x->title="QR Measurements Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1072;
    x->title="Target Material Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1073;
    x->title="SNR Threshold";
    x->vr="FD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1075;
    x->title="Image Scale Representation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1076;
    x->title="Referenced PTO Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1077;
    x->title="Referenced TDR Instance Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1078;
    x->title="PTO Location Description";
    x->vr="ST";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x1079;
    x->title="Anomaly Locator Indicator Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x107A;
    x->title="Anomaly Locator Indicator";
    x->vr="FL";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x107B;
    x->title="PTO Region Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x107C;
    x->title="Inspection Selection Criteria";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x107D;
    x->title="Secondary Inspection Method Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4010;
    x->tag[1]=0x107E;
    x->title="PRCS to RCS Orientation";
    x->vr="DS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x4FFE;
    x->tag[1]=0x0001;
    x->title="MAC Parameters Sequence";
    x->vr="SQ";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0005;
    //x->title="Curve Dimensions";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0010;
    //x->title="Number of Points";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0020;
    //x->title="Type of Data";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0022;
    //x->title="Curve Description";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0030;
    //x->title="Axis Units";
    //x->vr="SH";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0040;
    //x->title="Axis Labels";
    //x->vr="SH";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0103;
    //x->title="Data Value Representation";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0104;
    //x->title="Minimum Coordinate Value";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0105;
    //x->title="Maximum Coordinate Value";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0106;
    //x->title="Curve Range";
    //x->vr="SH";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0110;
    //x->title="Curve Data Descriptor";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0112;
    //x->title="Coordinate Start Value";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x0114;
    //x->title="Coordinate Step Value";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x1001;
    //x->title="Curve Activation Layer";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2000;
    //x->title="Audio Type";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2002;
    //x->title="Audio Sample Format";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2004;
    //x->title="Number of Channels";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2006;
    //x->title="Number of Samples";
    //x->vr="UL";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2008;
    //x->title="Sample Rate";
    //x->vr="UL";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x200A;
    //x->title="Total Time";
    //x->vr="UL";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x200C;
    //x->title="Audio Sample Data";
    //x->vr="OB";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x200E;
    //x->title="Audio Comments";
    //x->vr="LT";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2500;
    //x->title="Curve Label";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2600;
    //x->title="Curve Referenced Overlay Sequence";
    //x->vr="SQ";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x2610;
    //x->title="Curve Referenced Overlay Group";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x50xx;
    //x->tag[1]=0x3000;
    //x->title="Curve Data";
    //x->vr="OB";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x5200;
    x->tag[1]=0x9229;
    x->title="Shared Functional Groups Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5200;
    x->tag[1]=0x9230;
    x->title="Per-frame Functional Groups Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x0100;
    x->title="Waveform Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x0110;
    x->title="Channel Minimum Value";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x0112;
    x->title="Channel Maximum Value";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x1004;
    x->title="Waveform Bits Allocated";
    x->vr="US";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x1006;
    x->title="Waveform Sample Interpretation";
    x->vr="CS";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x100A;
    x->title="Waveform Padding Value";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5400;
    x->tag[1]=0x1010;
    x->title="Waveform Data";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5600;
    x->tag[1]=0x0010;
    x->title="First Order Phase Correction Angle";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x5600;
    x->tag[1]=0x0020;
    x->title="Spectroscopy Data";
    x->vr="OF";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0010;
    //x->title="Overlay Rows";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0011;
    //x->title="Overlay Columns";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0012;
    //x->title="Overlay Planes";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0015;
    //x->title="Number of Frames in Overlay";
    //x->vr="IS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0022;
    //x->title="Overlay Description";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0040;
    //x->title="Overlay Type";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0045;
    //x->title="Overlay Subtype";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0050;
    //x->title="Overlay Origin";
    //x->vr="SS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0051;
    //x->title="Image Frame Origin";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0052;
    //x->title="Overlay Plane Origin";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0060;
    //x->title="Overlay Compression Code";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0061;
    //x->title="Overlay Compression Originator";
    //x->vr="SH";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0062;
    //x->title="Overlay Compression Label";
    //x->vr="SH";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0063;
    //x->title="Overlay Compression Description";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0066;
    //x->title="Overlay Compression Step Pointers";
    //x->vr="AT";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0068;
    //x->title="Overlay Repeat Interval";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0069;
    //x->title="Overlay Bits Grouped";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0100;
    //x->title="Overlay Bits Allocated";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0102;
    //x->title="Overlay Bit Position";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0110;
    //x->title="Overlay Format";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0200;
    //x->title="Overlay Location";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0800;
    //x->title="Overlay Code Label";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0802;
    //x->title="Overlay Number of Tables";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0803;
    //x->title="Overlay Code Table Location";
    //x->vr="AT";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x0804;
    //x->title="Overlay Bits For Code Word";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1001;
    //x->title="Overlay Activation Layer";
    //x->vr="CS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1100;
    //x->title="Overlay Descriptor - Gray";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1101;
    //x->title="Overlay Descriptor - Red";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1102;
    //x->title="Overlay Descriptor - Green";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1103;
    //x->title="Overlay Descriptor - Blue";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1200;
    //x->title="Overlays - Gray";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1201;
    //x->title="Overlays - Red";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1202;
    //x->title="Overlays - Green";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1203;
    //x->title="Overlays - Blue";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1301;
    //x->title="ROI Area";
    //x->vr="IS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1302;
    //x->title="ROI Mean";
    //x->vr="DS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1303;
    //x->title="ROI Standard Deviation";
    //x->vr="DS";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x1500;
    //x->title="Overlay Label";
    //x->vr="LO";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x3000;
    //x->title="Overlay Data";
    //x->vr="OB";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x60xx;
    //x->tag[1]=0x4000;
    //x->title="Overlay Comments";
    //x->vr="LT";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0008;
    x->title="Float Pixel Data";
    x->vr="OF";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0009;
    x->title="Double Float Pixel Data";
    x->vr="OD";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0010;
    x->title="Pixel Data";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0020;
    x->title="Coefficients SDVN";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0030;
    x->title="Coefficients SDHN";
    x->vr="OW";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0x7FE0;
    x->tag[1]=0x0040;
    x->title="Coefficients SDDN";
    x->vr="OW";
    lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x7Fxx;
    //x->tag[1]=0x0010;
    //x->title="Variable Pixel Data";
    //x->vr="OB";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x7Fxx;
    //x->tag[1]=0x0011;
    //x->title="Variable Next Data Group";
    //x->vr="US";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x7Fxx;
    //x->tag[1]=0x0020;
    //x->title="Variable Coefficients SDVN";
    //x->vr="OW";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x7Fxx;
    //x->tag[1]=0x0030;
    //x->title="Variable Coefficients SDHN";
    //x->vr="OW";
    //lib.append(x);
    //x = new Reference();
    //x->tag[0]=0x7Fxx;
    //x->tag[1]=0x0040;
    //x->title="Variable Coefficients SDDN";
    //x->vr="OW";
    //lib.append(x);
    x = new Reference();
    x->tag[0]=0xFFFA;
    x->tag[1]=0xFFFA;
    x->title="Digital Signatures Sequence";
    x->vr="SQ";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0xFFFC;
    x->tag[1]=0xFFFC;
    x->title="Data Set Trailing Padding";
    x->vr="OB";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0xFFFE;
    x->tag[1]=0xE000;
    x->title="Item";
    x->vr="";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0xFFFE;
    x->tag[1]=0xE00D;
    x->title="Item Delimitation Item";
    x->vr="";
    lib.append(x);
    x = new Reference();
    x->tag[0]=0xFFFE;
    x->tag[1]=0xE0DD;
    x->title="Sequence Delimitation Item";
    x->vr="";
    lib.append(x);
}

database::~database() {
	for (int i = 0; i < lib.size(); i++) {
		delete lib[i];
	}
	lib.clear();
}

Reference database::binSearch(unsigned short int one, unsigned short int two,
                              int min, int max) {
    if (min == (max+min)/2) {
        return *lib[min];
    }

    if (lib[(max+min)/2]->tag[0] > one) {
        return binSearch(one, two, min, (max+min)/2);
    }
    else if (lib[(max+min)/2]->tag[0] < one) {
        return binSearch(one, two, (max+min)/2, max);
    }
    else {
        if (lib[(max+min)/2]->tag[1] > two) {
            return binSearch(one, two, min, (max+min)/2);
        }
        else if (lib[(max+min)/2]->tag[1] < two) {
            return binSearch(one, two, (max+min)/2, max);
        }
        else {
            return *lib[(max+min)/2];
        }
    }
}